{"version":3,"sources":["../../src/react/StatusBar.js"],"names":["React","require","PropTypes","StatusBarPlugin","uppyPropType","uppy","h","createElement","StatusBar","componentDidMount","props","options","id","target","container","use","plugin","getPlugin","componentWillUnmount","removePlugin","render","ref","Component","propTypes","hideAfterFinish","bool","showProgressDetails","defaultProps","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,YAAYD,QAAQ,YAAR,CAAlB;AACA,IAAME,kBAAkBF,QAAQ,sBAAR,CAAxB;AACA,IAAMG,eAAeH,QAAQ,aAAR,EAAuBI,IAA5C;;AAEA,IAAMC,IAAIN,MAAMO,aAAhB;;AAEA;;;;;IAKMC,S;;;;;;;;;sBACJC,iB,gCAAqB;AACnB,QAAMJ,OAAO,KAAKK,KAAL,CAAWL,IAAxB;AACA,QAAMM,UAAU,SACd,EAAEC,IAAI,iBAAN,EADc,EAEd,KAAKF,KAFS,EAGd,EAAEG,QAAQ,KAAKC,SAAf,EAHc,CAAhB;AAKA,WAAOH,QAAQN,IAAf;;AAEAA,SAAKU,GAAL,CAASZ,eAAT,EAA0BQ,OAA1B;;AAEA,SAAKK,MAAL,GAAcX,KAAKY,SAAL,CAAe,WAAf,CAAd;AACD,G;;sBAEDC,oB,mCAAwB;AACtB,QAAMb,OAAO,KAAKK,KAAL,CAAWL,IAAxB;;AAEAA,SAAKc,YAAL,CAAkB,KAAKH,MAAvB;AACD,G;;sBAEDI,M,qBAAU;AAAA;;AACR,WAAOd,EAAE,KAAF,EAAS;AACde,WAAK,aAACP,SAAD,EAAe;AAClB,eAAKA,SAAL,GAAiBA,SAAjB;AACD;AAHa,KAAT,CAAP;AAKD,G;;;EA3BqBd,MAAMsB,S;;AA8B9Bd,UAAUe,SAAV,GAAsB;AACpBlB,QAAMD,YADc;AAEpBoB,mBAAiBtB,UAAUuB,IAFP;AAGpBC,uBAAqBxB,UAAUuB;AAHX,CAAtB;AAKAjB,UAAUmB,YAAV,GAAyB,EAAzB;;AAGAC,OAAOC,OAAP,GAAiBrB,SAAjB","file":"StatusBar.js","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst StatusBarPlugin = require('../plugins/StatusBar')\nconst uppyPropType = require('./propTypes').uppy\n\nconst h = React.createElement\n\n/**\n * React component that renders a status bar containing upload progress and speed,\n * processing progress and pause/resume/cancel controls.\n */\n\nclass StatusBar extends React.Component {\n  componentDidMount () {\n    const uppy = this.props.uppy\n    const options = Object.assign(\n      { id: 'react:StatusBar' },\n      this.props,\n      { target: this.container }\n    )\n    delete options.uppy\n\n    uppy.use(StatusBarPlugin, options)\n\n    this.plugin = uppy.getPlugin('StatusBar')\n  }\n\n  componentWillUnmount () {\n    const uppy = this.props.uppy\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  render () {\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      }\n    })\n  }\n}\n\nStatusBar.propTypes = {\n  uppy: uppyPropType,\n  hideAfterFinish: PropTypes.bool,\n  showProgressDetails: PropTypes.bool\n}\nStatusBar.defaultProps = {\n}\n\nmodule.exports = StatusBar\n"]}