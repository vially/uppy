{"version":3,"sources":["../../src/react/DragDrop.js"],"names":["React","require","DragDropPlugin","propTypes","h","createElement","DragDrop","componentDidMount","uppy","props","options","id","target","container","use","plugin","getPlugin","componentWillUnmount","removePlugin","render","ref","Component","locale","defaultProps","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,iBAAiBD,QAAQ,qBAAR,CAAvB;AACA,IAAME,YAAYF,QAAQ,aAAR,CAAlB;;AAEA,IAAMG,IAAIJ,MAAMK,aAAhB;;AAEA;;;;;IAKMC,Q;;;;;;;;;qBACJC,iB,gCAAqB;AACnB,QAAMC,OAAO,KAAKC,KAAL,CAAWD,IAAxB;AACA,QAAME,UAAU,SACd,EAAEC,IAAI,gBAAN,EADc,EAEd,KAAKF,KAFS,EAGd,EAAEG,QAAQ,KAAKC,SAAf,EAHc,CAAhB;AAKA,WAAOH,QAAQF,IAAf;;AAEAA,SAAKM,GAAL,CAASZ,cAAT,EAAyBQ,OAAzB;;AAEA,SAAKK,MAAL,GAAcP,KAAKQ,SAAL,CAAe,UAAf,CAAd;AACD,G;;qBAEDC,oB,mCAAwB;AACtB,QAAMT,OAAO,KAAKC,KAAL,CAAWD,IAAxB;;AAEAA,SAAKU,YAAL,CAAkB,KAAKH,MAAvB;AACD,G;;qBAEDI,M,qBAAU;AAAA;;AACR,WAAOf,EAAE,KAAF,EAAS;AACdgB,WAAK,aAACP,SAAD,EAAe;AAClB,eAAKA,SAAL,GAAiBA,SAAjB;AACD;AAHa,KAAT,CAAP;AAKD,G;;;EA3BoBb,MAAMqB,S;;AA8B7Bf,SAASH,SAAT,GAAqB;AACnBK,QAAML,UAAUK,IADG;AAEnBc,UAAQnB,UAAUmB;AAFC,CAArB;AAIAhB,SAASiB,YAAT,GAAwB,EAAxB;;AAGAC,OAAOC,OAAP,GAAiBnB,QAAjB","file":"DragDrop.js","sourcesContent":["const React = require('react')\nconst DragDropPlugin = require('../plugins/DragDrop')\nconst propTypes = require('./propTypes')\n\nconst h = React.createElement\n\n/**\n * React component that renders an area in which files can be dropped to be\n * uploaded.\n */\n\nclass DragDrop extends React.Component {\n  componentDidMount () {\n    const uppy = this.props.uppy\n    const options = Object.assign(\n      { id: 'react:DragDrop' },\n      this.props,\n      { target: this.container }\n    )\n    delete options.uppy\n\n    uppy.use(DragDropPlugin, options)\n\n    this.plugin = uppy.getPlugin('DragDrop')\n  }\n\n  componentWillUnmount () {\n    const uppy = this.props.uppy\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  render () {\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      }\n    })\n  }\n}\n\nDragDrop.propTypes = {\n  uppy: propTypes.uppy,\n  locale: propTypes.locale\n}\nDragDrop.defaultProps = {\n}\n\nmodule.exports = DragDrop\n"]}