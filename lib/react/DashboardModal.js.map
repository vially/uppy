{"version":3,"sources":["../../src/react/DashboardModal.js"],"names":["React","require","PropTypes","DashboardPlugin","basePropTypes","dashboard","h","createElement","DashboardModal","componentDidMount","uppy","props","options","id","onRequestCloseModal","onRequestClose","target","container","use","plugin","getPlugin","open","openModal","componentWillUnmount","removePlugin","componentWillReceiveProps","nextProps","closeModal","render","ref","Component","propTypes","window","instanceOf","HTMLElement","any","bool","func","closeModalOnClickOutside","disablePageScrollWhenModalOpen","defaultProps","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,YAAYD,QAAQ,YAAR,CAAlB;AACA,IAAME,kBAAkBF,QAAQ,sBAAR,CAAxB;AACA,IAAMG,gBAAgBH,QAAQ,aAAR,EAAuBI,SAA7C;;AAEA,IAAMC,IAAIN,MAAMO,aAAhB;;AAEA;;;;;IAKMC,c;;;;;;;;;2BACJC,iB,gCAAqB;AACnB,QAAMC,OAAO,KAAKC,KAAL,CAAWD,IAAxB;AACA,QAAME,UAAU,SACd,EAAEC,IAAI,sBAAN,EADc,EAEd,KAAKF,KAFS,EAGd;AACEG,2BAAqB,KAAKH,KAAL,CAAWI;AADlC,KAHc,CAAhB;;AAQA,QAAI,CAACH,QAAQI,MAAb,EAAqB;AACnBJ,cAAQI,MAAR,GAAiB,KAAKC,SAAtB;AACD;;AAED,WAAOL,QAAQF,IAAf;AACAA,SAAKQ,GAAL,CAASf,eAAT,EAA0BS,OAA1B;;AAEA,SAAKO,MAAL,GAAcT,KAAKU,SAAL,CAAe,WAAf,CAAd;AACA,QAAI,KAAKT,KAAL,CAAWU,IAAf,EAAqB;AACnB,WAAKF,MAAL,CAAYG,SAAZ;AACD;AACF,G;;2BAEDC,oB,mCAAwB;AACtB,QAAMb,OAAO,KAAKC,KAAL,CAAWD,IAAxB;;AAEAA,SAAKc,YAAL,CAAkB,KAAKL,MAAvB;AACD,G;;2BAEDM,yB,sCAA2BC,S,EAAW;AACpC,QAAI,KAAKf,KAAL,CAAWU,IAAX,IAAmB,CAACK,UAAUL,IAAlC,EAAwC;AACtC,WAAKF,MAAL,CAAYQ,UAAZ;AACD,KAFD,MAEO,IAAI,CAAC,KAAKhB,KAAL,CAAWU,IAAZ,IAAoBK,UAAUL,IAAlC,EAAwC;AAC7C,WAAKF,MAAL,CAAYG,SAAZ;AACD;AACF,G;;2BAEDM,M,qBAAU;AAAA;;AACR,WAAOtB,EAAE,KAAF,EAAS;AACduB,WAAK,aAACZ,SAAD,EAAe;AAClB,eAAKA,SAAL,GAAiBA,SAAjB;AACD;AAHa,KAAT,CAAP;AAKD,G;;;EA5C0BjB,MAAM8B,S;;AA+CnCtB,eAAeuB,SAAf,GAA2B,SAAc;AACvC;AACAf,UAAQ,OAAOgB,MAAP,KAAkB,WAAlB,GAAgC9B,UAAU+B,UAAV,CAAqBD,OAAOE,WAA5B,CAAhC,GAA2EhC,UAAUiC,GAFtD;AAGvCd,QAAMnB,UAAUkC,IAHuB;AAIvCrB,kBAAgBb,UAAUmC,IAJa;AAKvCC,4BAA0BpC,UAAUkC,IALG;AAMvCG,kCAAgCrC,UAAUkC;AANH,CAAd,EAOxBhC,aAPwB,CAA3B;;AASAI,eAAegC,YAAf,GAA8B,EAA9B;;AAGAC,OAAOC,OAAP,GAAiBlC,cAAjB","file":"DashboardModal.js","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst DashboardPlugin = require('../plugins/Dashboard')\nconst basePropTypes = require('./propTypes').dashboard\n\nconst h = React.createElement\n\n/**\n * React Component that renders a Dashboard for an Uppy instance in a Modal\n * dialog. Visibility of the Modal is toggled using the `open` prop.\n */\n\nclass DashboardModal extends React.Component {\n  componentDidMount () {\n    const uppy = this.props.uppy\n    const options = Object.assign(\n      { id: 'react:DashboardModal' },\n      this.props,\n      {\n        onRequestCloseModal: this.props.onRequestClose\n      }\n    )\n\n    if (!options.target) {\n      options.target = this.container\n    }\n\n    delete options.uppy\n    uppy.use(DashboardPlugin, options)\n\n    this.plugin = uppy.getPlugin('Dashboard')\n    if (this.props.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  componentWillUnmount () {\n    const uppy = this.props.uppy\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.open && !nextProps.open) {\n      this.plugin.closeModal()\n    } else if (!this.props.open && nextProps.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  render () {\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      }\n    })\n  }\n}\n\nDashboardModal.propTypes = Object.assign({\n  // Only check this prop type in the browser.\n  target: typeof window !== 'undefined' ? PropTypes.instanceOf(window.HTMLElement) : PropTypes.any,\n  open: PropTypes.bool,\n  onRequestClose: PropTypes.func,\n  closeModalOnClickOutside: PropTypes.bool,\n  disablePageScrollWhenModalOpen: PropTypes.bool\n}, basePropTypes)\n\nDashboardModal.defaultProps = {\n}\n\nmodule.exports = DashboardModal\n"]}