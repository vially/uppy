{"version":3,"sources":["../../src/plugins/Tus.js"],"names":["Plugin","require","tus","UppySocket","emitSocketProgress","getSocketHost","settle","limitPromises","tusDefaultOptions","endpoint","resume","onProgress","onChunkComplete","onSuccess","onError","headers","chunkSize","Infinity","withCredentials","uploadUrl","uploadSize","overridePatchMethod","retryDelays","createEventTracker","emitter","events","on","event","fn","push","remove","forEach","off","module","exports","uppy","opts","type","id","title","defaultOptions","autoRetry","useFastRemoteRetry","limit","limitUploads","uploaders","Object","create","uploaderEvents","uploaderSockets","handleResetProgress","bind","handleUpload","files","state","keys","fileID","tusState","setState","resetUploaderReferences","abort","close","upload","file","current","total","resolve","reject","optsTus","err","log","emit","message","bytesUploaded","bytesTotal","onReceiveUploadUrl","url","uploader","name","metadata","meta","Upload","data","onFileRemove","targetFileID","onPause","isPaused","start","onPauseAll","onCancelAll","onResumeAll","error","uploadRemote","remote","serverToken","connectToServerSocket","then","catch","fetch","method","credentials","body","JSON","stringify","protocol","size","res","status","statusText","json","setFileState","token","getFile","Error","host","socket","target","send","onRetry","onRetryAll","progressData","errData","cause","updateFile","uploadURL","currentFile","newFile","cb","filesToRetry","uploadFiles","actions","map","i","parseInt","length","isRemote","promises","action","limitedAction","fileIDs","filesToUpload","addResumableUploadsCapabilityFlag","newCapabilities","getState","capabilities","resumableUploads","install","addUploader","retryAll","uninstall","removeUploader"],"mappings":"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","file":"Tus.js","sourcesContent":["const Plugin = require('../core/Plugin')\nconst tus = require('tus-js-client')\nconst UppySocket = require('../core/UppySocket')\nconst {\n  emitSocketProgress,\n  getSocketHost,\n  settle,\n  limitPromises\n} = require('../core/Utils')\nrequire('whatwg-fetch')\n\n// Extracted from https://github.com/tus/tus-js-client/blob/master/lib/upload.js#L13\n// excepted we removed 'fingerprint' key to avoid adding more dependencies\nconst tusDefaultOptions = {\n  endpoint: '',\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null,\n  overridePatchMethod: false,\n  retryDelays: null\n}\n\n/**\n * Create a wrapper around an event emitter with a `remove` method to remove\n * all events that were added using the wrapped emitter.\n */\nfunction createEventTracker (emitter) {\n  const events = []\n  return {\n    on (event, fn) {\n      events.push([ event, fn ])\n      return emitter.on(event, fn)\n    },\n    remove () {\n      events.forEach(([ event, fn ]) => {\n        emitter.off(event, fn)\n      })\n    }\n  }\n}\n\n/**\n * Tus resumable file uploader\n *\n */\nmodule.exports = class Tus extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'uploader'\n    this.id = 'Tus'\n    this.title = 'Tus'\n\n    // set default options\n    const defaultOptions = {\n      resume: true,\n      autoRetry: true,\n      useFastRemoteRetry: true,\n      limit: 0,\n      retryDelays: [0, 1000, 3000, 5000]\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    // Simultaneous upload limiting is shared across all uploads with this plugin.\n    if (typeof this.opts.limit === 'number' && this.opts.limit !== 0) {\n      this.limitUploads = limitPromises(this.opts.limit)\n    } else {\n      this.limitUploads = (fn) => fn\n    }\n\n    this.uploaders = Object.create(null)\n    this.uploaderEvents = Object.create(null)\n    this.uploaderSockets = Object.create(null)\n\n    this.handleResetProgress = this.handleResetProgress.bind(this)\n    this.handleUpload = this.handleUpload.bind(this)\n  }\n\n  handleResetProgress () {\n    const files = Object.assign({}, this.uppy.state.files)\n    Object.keys(files).forEach((fileID) => {\n      // Only clone the file object if it has a Tus `uploadUrl` attached.\n      if (files[fileID].tus && files[fileID].tus.uploadUrl) {\n        const tusState = Object.assign({}, files[fileID].tus)\n        delete tusState.uploadUrl\n        files[fileID] = Object.assign({}, files[fileID], { tus: tusState })\n      }\n    })\n\n    this.uppy.setState({ files })\n  }\n\n  /**\n   * Clean up all references for a file's upload: the tus.Upload instance,\n   * any events related to the file, and the uppy-server WebSocket connection.\n   */\n  resetUploaderReferences (fileID) {\n    if (this.uploaders[fileID]) {\n      this.uploaders[fileID].abort()\n      this.uploaders[fileID] = null\n    }\n    if (this.uploaderEvents[fileID]) {\n      this.uploaderEvents[fileID].remove()\n      this.uploaderEvents[fileID] = null\n    }\n    if (this.uploaderSockets[fileID]) {\n      this.uploaderSockets[fileID].close()\n      this.uploaderSockets[fileID] = null\n    }\n  }\n\n  /**\n   * Create a new Tus upload\n   *\n   * @param {object} file for use with upload\n   * @param {integer} current file in a queue\n   * @param {integer} total number of files in a queue\n   * @returns {Promise}\n   */\n  upload (file, current, total) {\n    this.resetUploaderReferences(file.id)\n\n    // Create a new tus upload\n    return new Promise((resolve, reject) => {\n      const optsTus = Object.assign(\n        {},\n        tusDefaultOptions,\n        this.opts,\n        // Install file-specific upload overrides.\n        file.tus || {}\n      )\n\n      optsTus.onError = (err) => {\n        this.uppy.log(err)\n        this.uppy.emit('upload-error', file, err)\n        err.message = `Failed because: ${err.message}`\n\n        this.resetUploaderReferences(file.id)\n        reject(err)\n      }\n\n      optsTus.onProgress = (bytesUploaded, bytesTotal) => {\n        this.onReceiveUploadUrl(file, upload.url)\n        this.uppy.emit('upload-progress', file, {\n          uploader: this,\n          bytesUploaded: bytesUploaded,\n          bytesTotal: bytesTotal\n        })\n      }\n\n      optsTus.onSuccess = () => {\n        this.uppy.emit('upload-success', file, upload, upload.url)\n\n        if (upload.url) {\n          this.uppy.log('Download ' + upload.file.name + ' from ' + upload.url)\n        }\n\n        this.resetUploaderReferences(file.id)\n        resolve(upload)\n      }\n      optsTus.metadata = file.meta\n\n      const upload = new tus.Upload(file.data, optsTus)\n      this.uploaders[file.id] = upload\n      this.uploaderEvents[file.id] = createEventTracker(this.uppy)\n\n      this.onFileRemove(file.id, (targetFileID) => {\n        this.resetUploaderReferences(file.id)\n        resolve(`upload ${targetFileID} was removed`)\n      })\n\n      this.onPause(file.id, (isPaused) => {\n        if (isPaused) {\n          upload.abort()\n        } else {\n          upload.start()\n        }\n      })\n\n      this.onPauseAll(file.id, () => {\n        upload.abort()\n      })\n\n      this.onCancelAll(file.id, () => {\n        this.resetUploaderReferences(file.id)\n      })\n\n      this.onResumeAll(file.id, () => {\n        if (file.error) {\n          upload.abort()\n        }\n        upload.start()\n      })\n\n      if (!file.isPaused) {\n        upload.start()\n      }\n    })\n  }\n\n  uploadRemote (file, current, total) {\n    this.resetUploaderReferences(file.id)\n\n    const opts = Object.assign(\n      {},\n      this.opts,\n      // Install file-specific upload overrides.\n      file.tus || {}\n    )\n\n    return new Promise((resolve, reject) => {\n      this.uppy.log(file.remote.url)\n      if (file.serverToken) {\n        return this.connectToServerSocket(file)\n          .then(() => resolve())\n          .catch(reject)\n      }\n\n      fetch(file.remote.url, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(Object.assign({}, file.remote.body, {\n          endpoint: opts.endpoint,\n          uploadUrl: opts.uploadUrl,\n          protocol: 'tus',\n          size: file.data.size,\n          metadata: file.meta\n        }))\n      })\n      .then((res) => {\n        if (res.status < 200 || res.status > 300) {\n          return reject(res.statusText)\n        }\n\n        return res.json().then((data) => {\n          this.uppy.setFileState(file.id, { serverToken: data.token })\n          file = this.getFile(file.id)\n          return file\n        })\n      })\n      .then((file) => {\n        return this.connectToServerSocket(file)\n      })\n      .then(() => {\n        resolve()\n      })\n      .catch((err) => {\n        reject(new Error(err))\n      })\n    })\n  }\n\n  connectToServerSocket (file) {\n    return new Promise((resolve, reject) => {\n      const token = file.serverToken\n      const host = getSocketHost(file.remote.host)\n      const socket = new UppySocket({ target: `${host}/api/${token}` })\n      this.uploaderSockets[file.id] = socket\n      this.uploaderEvents[file.id] = createEventTracker(this.uppy)\n\n      this.onFileRemove(file.id, () => {\n        socket.send('pause', {})\n        resolve(`upload ${file.id} was removed`)\n      })\n\n      this.onPause(file.id, (isPaused) => {\n        isPaused ? socket.send('pause', {}) : socket.send('resume', {})\n      })\n\n      this.onPauseAll(file.id, () => socket.send('pause', {}))\n\n      this.onCancelAll(file.id, () => socket.send('pause', {}))\n\n      this.onResumeAll(file.id, () => {\n        if (file.error) {\n          socket.send('pause', {})\n        }\n        socket.send('resume', {})\n      })\n\n      this.onRetry(file.id, () => {\n        socket.send('pause', {})\n        socket.send('resume', {})\n      })\n\n      this.onRetryAll(file.id, () => {\n        socket.send('pause', {})\n        socket.send('resume', {})\n      })\n\n      if (file.isPaused) {\n        socket.send('pause', {})\n      }\n\n      socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n      socket.on('error', (errData) => {\n        const { message } = errData.error\n        const error = Object.assign(new Error(message), { cause: errData.error })\n\n        // If the remote retry optimisation should not be used,\n        // close the socket—this will tell uppy-server to clear state and delete the file.\n        if (!this.opts.useFastRemoteRetry) {\n          this.resetUploaderReferences(file.id)\n          // Remove the serverToken so that a new one will be created for the retry.\n          this.uppy.setFileState(file.id, {\n            serverToken: null\n          })\n        }\n\n        this.uppy.emit('upload-error', file, error)\n        reject(error)\n      })\n\n      socket.on('success', (data) => {\n        this.uppy.emit('upload-success', file, data, data.url)\n        this.resetUploaderReferences(file.id)\n        resolve()\n      })\n    })\n  }\n\n  getFile (fileID) {\n    return this.uppy.state.files[fileID]\n  }\n\n  updateFile (file) {\n    const files = Object.assign({}, this.uppy.state.files, {\n      [file.id]: file\n    })\n    this.uppy.setState({ files })\n  }\n\n  onReceiveUploadUrl (file, uploadURL) {\n    const currentFile = this.getFile(file.id)\n    if (!currentFile) return\n    // Only do the update if we didn't have an upload URL yet,\n    // or resume: false in options\n    if ((!currentFile.tus || currentFile.tus.uploadUrl !== uploadURL) && this.opts.resume) {\n      this.uppy.log('[Tus] Storing upload url')\n      const newFile = Object.assign({}, currentFile, {\n        tus: Object.assign({}, currentFile.tus, {\n          uploadUrl: uploadURL\n        })\n      })\n      this.updateFile(newFile)\n    }\n  }\n\n  onFileRemove (fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', (file) => {\n      if (fileID === file.id) cb(file.id)\n    })\n  }\n\n  onPause (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        // const isPaused = this.uppy.pauseResume(fileID)\n        cb(isPaused)\n      }\n    })\n  }\n\n  onRetry (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', (targetFileID) => {\n      if (fileID === targetFileID) {\n        cb()\n      }\n    })\n  }\n\n  onRetryAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', (filesToRetry) => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onPauseAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('pause-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onCancelAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('cancel-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onResumeAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('resume-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  uploadFiles (files) {\n    const actions = files.map((file, i) => {\n      const current = parseInt(i, 10) + 1\n      const total = files.length\n\n      if (file.error) {\n        return () => Promise.reject(new Error(file.error))\n      } else if (file.isRemote) {\n        // We emit upload-started here, so that it's also emitted for files\n        // that have to wait due to the `limit` option.\n        this.uppy.emit('upload-started', file)\n        return this.uploadRemote.bind(this, file, current, total)\n      } else {\n        this.uppy.emit('upload-started', file)\n        return this.upload.bind(this, file, current, total)\n      }\n    })\n\n    const promises = actions.map((action) => {\n      const limitedAction = this.limitUploads(action)\n      return limitedAction()\n    })\n\n    return settle(promises)\n  }\n\n  handleUpload (fileIDs) {\n    if (fileIDs.length === 0) {\n      this.uppy.log('Tus: no files to upload!')\n      return Promise.resolve()\n    }\n\n    this.uppy.log('Tus is uploading...')\n    const filesToUpload = fileIDs.map((fileID) => this.uppy.getFile(fileID))\n\n    return this.uploadFiles(filesToUpload)\n      .then(() => null)\n  }\n\n  addResumableUploadsCapabilityFlag () {\n    const newCapabilities = Object.assign({}, this.uppy.getState().capabilities)\n    newCapabilities.resumableUploads = true\n    this.uppy.setState({\n      capabilities: newCapabilities\n    })\n  }\n\n  install () {\n    this.addResumableUploadsCapabilityFlag()\n    this.uppy.addUploader(this.handleUpload)\n\n    this.uppy.on('reset-progress', this.handleResetProgress)\n\n    if (this.opts.autoRetry) {\n      this.uppy.on('back-online', this.uppy.retryAll)\n    }\n  }\n\n  uninstall () {\n    this.uppy.removeUploader(this.handleUpload)\n\n    if (this.opts.autoRetry) {\n      this.uppy.off('back-online', this.uppy.retryAll)\n    }\n  }\n}\n"]}