{"version":3,"sources":["../../../src/plugins/Dashboard/index.js"],"names":["Plugin","require","Translator","dragDrop","DashboardUI","StatusBar","Informer","ThumbnailGenerator","findAllDOMElements","toArray","prettyBytes","defaultTabIcon","FOCUSABLE_ELEMENTS","module","exports","uppy","opts","id","title","type","defaultLocale","strings","selectToUpload","closeModal","upload","importFrom","dashboardWindowTitle","dashboardTitle","copyLinkToClipboardSuccess","copyLinkToClipboardFallback","copyLink","fileSource","done","name","removeFile","editFile","editing","finishEditingFile","saveChanges","cancel","localDisk","myDevice","dropPasteImport","dropPaste","browse","fileProgress","numberOfSelectedFiles","uploadAllNewFiles","emptyFolderAdded","uploadComplete","resumeUpload","pauseUpload","retryUpload","uploadXFiles","uploadXNewFiles","folderAdded","defaultOptions","target","metaFields","trigger","inline","width","height","thumbnailWidth","showLinkToFileUploadResult","showProgressDetails","hideUploadButton","hideProgressAfterFinish","note","closeModalOnClickOutside","disableStatusBar","disableInformer","disableThumbnailGenerator","disablePageScrollWhenModalOpen","proudlyDisplayPoweredByUppy","onRequestCloseModal","locale","translator","i18n","translate","bind","openModal","requestCloseModal","isModalOpen","addTarget","hideAllPanels","showPanel","getFocusableNodes","setFocusToFirstNode","maintainFocus","initEvents","onKeydown","handleClickOutside","toggleFileCard","handleDrop","handlePaste","handleInputChange","updateDashboardElWidth","render","install","plugin","callerPluginId","constructor","callerPluginName","callerPluginType","msg","log","state","getPluginState","newTargets","targets","slice","push","setPluginState","el","activePanel","filter","nodes","querySelectorAll","Object","keys","map","key","focusableNodes","length","focus","setFocusToBrowse","browseBtn","querySelector","event","focusedItemIndex","indexOf","document","activeElement","shiftKey","preventDefault","isHidden","savedScrollPosition","window","scrollY","savedActiveElement","body","classList","add","rerender","getState","remove","keyCode","ev","files","clipboardData","items","forEach","file","kind","blob","getAsFile","info","addFile","source","data","showModalTrigger","addEventListener","removeDragDropListener","pos","fileList","directories","removeEvents","removeEventListener","dashboardEl","offsetWidth","containerWidth","fileId","fileCardFor","emit","pluginState","newFiles","progress","uploadStarted","inProgressFiles","isPaused","inProgressFilesArray","totalSize","totalUploadedSize","bytesTotal","bytesUploaded","attachRenderFunctionToTarget","getPlugin","icon","isSupported","acquirers","progressindicators","startUpload","catch","err","stack","message","cancelUpload","fileID","saveFileCard","meta","setFileMeta","modal","totalFileCount","totalProgress","autoProceed","resumableUploads","capabilities","pauseResume","currentWidth","isWide","isTargetDOMEl","allowedFileTypes","restrictions","maxNumberOfFiles","discoverProviderPlugins","iteratePlugins","showFileCard","mount","plugins","pluginID","use","hideAfterFinish","uninstall","informer","removePlugin","statusBar","thumbnail","unmount"],"mappings":";;;;;;;;AAAA,IAAMA,SAASC,QAAQ,mBAAR,CAAf;AACA,IAAMC,aAAaD,QAAQ,uBAAR,CAAnB;AACA,IAAME,WAAWF,QAAQ,WAAR,CAAjB;AACA,IAAMG,cAAcH,QAAQ,aAAR,CAApB;AACA,IAAMI,YAAYJ,QAAQ,cAAR,CAAlB;AACA,IAAMK,WAAWL,QAAQ,aAAR,CAAjB;AACA,IAAMM,qBAAqBN,QAAQ,uBAAR,CAA3B;;eACwCA,QAAQ,kBAAR,C;IAAhCO,kB,YAAAA,kB;IAAoBC,O,YAAAA,O;;AAC5B,IAAMC,cAAcT,QAAQ,gBAAR,CAApB;;gBAC2BA,QAAQ,SAAR,C;IAAnBU,c,aAAAA,c;;AAER;AACA;AACA;;;AACA,IAAMC,qBAAqB,CACzB,SADyB,EAEzB,YAFyB,EAGzB,+DAHyB,EAIzB,2CAJyB,EAKzB,6CALyB,EAMzB,2CANyB,EAOzB,QAPyB,EAQzB,QARyB,EASzB,OATyB,EAUzB,mBAVyB,EAWzB,iCAXyB,CAA3B;;AAcA;;;AAGAC,OAAOC,OAAP;AAAA;;AACE,qBAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAAA;;AAAA,iDACvB,mBAAMD,IAAN,EAAYC,IAAZ,CADuB;;AAEvB,UAAKC,EAAL,GAAU,MAAKD,IAAL,CAAUC,EAAV,IAAgB,WAA1B;AACA,UAAKC,KAAL,GAAa,WAAb;AACA,UAAKC,IAAL,GAAY,cAAZ;;AAEA,QAAMC,gBAAgB;AACpBC,eAAS;AACPC,wBAAgB,wBADT;AAEPC,oBAAY,aAFL;AAGPC,gBAAQ,QAHD;AAIPC,oBAAY,aAJL;AAKPC,8BAAsB,+CALf;AAMPC,wBAAgB,gBANT;AAOPC,oCAA4B,0BAPrB;AAQPC,qCAA6B,oBARtB;AASPC,kBAAU,WATH;AAUPC,oBAAY,aAVL;AAWPC,cAAM,MAXC;AAYPC,cAAM,MAZC;AAaPC,oBAAY,aAbL;AAcPC,kBAAU,WAdH;AAePC,iBAAS,SAfF;AAgBPC,2BAAmB,qBAhBZ;AAiBPC,qBAAa,cAjBN;AAkBPC,gBAAQ,QAlBD;AAmBPC,mBAAW,YAnBJ;AAoBPC,kBAAU,WApBH;AAqBPC,yBAAiB,mEArBV;AAsBPC,mBAAW,2BAtBJ;AAuBPC,gBAAQ,QAvBD;AAwBPC,sBAAc,qCAxBP;AAyBPC,+BAAuB,0BAzBhB;AA0BPC,2BAAmB,sBA1BZ;AA2BPC,0BAAkB,uCA3BX;AA4BPC,wBAAgB,iBA5BT;AA6BPC,sBAAc,eA7BP;AA8BPC,qBAAa,cA9BN;AA+BPC,qBAAa,cA/BN;AAgCPC,sBAAc;AACZ,aAAG,4BADS;AAEZ,aAAG;AAFS,SAhCP;AAoCPC,yBAAiB;AACf,aAAG,6BADY;AAEf,aAAG;AAFY,SApCV;AAwCPC,qBAAa;AACX,aAAG,0CADQ;AAEX,aAAG;AAFQ;AAxCN;;AA+CX;AAhDsB,KAAtB,CAiDA,IAAMC,iBAAiB;AACrBC,cAAQ,MADa;AAErBC,kBAAY,EAFS;AAGrBC,eAAS,oBAHY;AAIrBC,cAAQ,KAJa;AAKrBC,aAAO,GALc;AAMrBC,cAAQ,GANa;AAOrBC,sBAAgB,GAPK;AAQrBpD,sBAAgBA,cARK;AASrBqD,kCAA4B,IATP;AAUrBC,2BAAqB,KAVA;AAWrBC,wBAAkB,KAXG;AAYrBC,+BAAyB,KAZJ;AAarBC,YAAM,IAbe;AAcrBC,gCAA0B,KAdL;AAerBC,wBAAkB,KAfG;AAgBrBC,uBAAiB,KAhBI;AAiBrBC,iCAA2B,KAjBN;AAkBrBC,sCAAgC,IAlBX;AAmBrBC,mCAA6B,IAnBR;AAoBrBC,2BAAqB;AAAA,eAAM,MAAKpD,UAAL,EAAN;AAAA,OApBA;AAqBrBqD,cAAQxD;;AAGV;AAxBuB,KAAvB,CAyBA,MAAKJ,IAAL,GAAY,SAAc,EAAd,EAAkBwC,cAAlB,EAAkCxC,IAAlC,CAAZ;;AAEA,UAAK4D,MAAL,GAAc,SAAc,EAAd,EAAkBxD,aAAlB,EAAiC,MAAKJ,IAAL,CAAU4D,MAA3C,CAAd;AACA,UAAKA,MAAL,CAAYvD,OAAZ,GAAsB,SAAc,EAAd,EAAkBD,cAAcC,OAAhC,EAAyC,MAAKL,IAAL,CAAU4D,MAAV,CAAiBvD,OAA1D,CAAtB;;AAEA,UAAKwD,UAAL,GAAkB,IAAI3E,UAAJ,CAAe,EAAC0E,QAAQ,MAAKA,MAAd,EAAf,CAAlB;AACA,UAAKE,IAAL,GAAY,MAAKD,UAAL,CAAgBE,SAAhB,CAA0BC,IAA1B,CAA+B,MAAKH,UAApC,CAAZ;;AAEA,UAAKI,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,OAAjB;AACA,UAAKzD,UAAL,GAAkB,MAAKA,UAAL,CAAgByD,IAAhB,OAAlB;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,OAAzB;AACA,UAAKG,WAAL,GAAmB,MAAKA,WAAL,CAAiBH,IAAjB,OAAnB;;AAEA,UAAKI,SAAL,GAAiB,MAAKA,SAAL,CAAeJ,IAAf,OAAjB;AACA,UAAKK,aAAL,GAAqB,MAAKA,aAAL,CAAmBL,IAAnB,OAArB;AACA,UAAKM,SAAL,GAAiB,MAAKA,SAAL,CAAeN,IAAf,OAAjB;AACA,UAAKO,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBP,IAAvB,OAAzB;AACA,UAAKQ,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBR,IAAzB,OAA3B;AACA,UAAKS,aAAL,GAAqB,MAAKA,aAAL,CAAmBT,IAAnB,OAArB;;AAEA,UAAKU,UAAL,GAAkB,MAAKA,UAAL,CAAgBV,IAAhB,OAAlB;AACA,UAAKW,SAAL,GAAiB,MAAKA,SAAL,CAAeX,IAAf,OAAjB;AACA,UAAKY,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBZ,IAAxB,OAA1B;AACA,UAAKa,cAAL,GAAsB,MAAKA,cAAL,CAAoBb,IAApB,OAAtB;AACA,UAAKc,UAAL,GAAkB,MAAKA,UAAL,CAAgBd,IAAhB,OAAlB;AACA,UAAKe,WAAL,GAAmB,MAAKA,WAAL,CAAiBf,IAAjB,OAAnB;AACA,UAAKgB,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBhB,IAAvB,OAAzB;AACA,UAAKiB,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BjB,IAA5B,OAA9B;AACA,UAAKkB,MAAL,GAAc,MAAKA,MAAL,CAAYlB,IAAZ,OAAd;AACA,UAAKmB,OAAL,GAAe,MAAKA,OAAL,CAAanB,IAAb,OAAf;AA7GuB;AA8GxB;;AA/GH,sBAiHEI,SAjHF,sBAiHagB,MAjHb,EAiHqB;AACjB,QAAMC,iBAAiBD,OAAOnF,EAAP,IAAamF,OAAOE,WAAP,CAAmBrE,IAAvD;AACA,QAAMsE,mBAAmBH,OAAOlF,KAAP,IAAgBmF,cAAzC;AACA,QAAMG,mBAAmBJ,OAAOjF,IAAhC;;AAEA,QAAIqF,qBAAqB,UAArB,IACAA,qBAAqB,mBADrB,IAEAA,qBAAqB,WAFzB,EAEsC;AACpC,UAAIC,MAAM,+FAAV;AACA,WAAK1F,IAAL,CAAU2F,GAAV,CAAcD,GAAd;AACA;AACD;;AAED,QAAMhD,SAAS;AACbxC,UAAIoF,cADS;AAEbpE,YAAMsE,gBAFO;AAGbpF,YAAMqF;AAHO,KAAf;;AAMA,QAAMG,QAAQ,KAAKC,cAAL,EAAd;AACA,QAAMC,aAAaF,MAAMG,OAAN,CAAcC,KAAd,EAAnB;AACAF,eAAWG,IAAX,CAAgBvD,MAAhB;;AAEA,SAAKwD,cAAL,CAAoB;AAClBH,eAASD;AADS,KAApB;;AAIA,WAAO,KAAKK,EAAZ;AACD,GA7IH;;AAAA,sBA+IE7B,aA/IF,4BA+ImB;AACf,SAAK4B,cAAL,CAAoB;AAClBE,mBAAa;AADK,KAApB;AAGD,GAnJH;;AAAA,sBAqJE7B,SArJF,sBAqJarE,EArJb,EAqJiB;AAAA,0BACO,KAAK2F,cAAL,EADP;AAAA,QACLE,OADK,mBACLA,OADK;;AAGb,QAAMK,cAAcL,QAAQM,MAAR,CAAe,UAAC3D,MAAD,EAAY;AAC7C,aAAOA,OAAOtC,IAAP,KAAgB,UAAhB,IAA8BsC,OAAOxC,EAAP,KAAcA,EAAnD;AACD,KAFmB,EAEjB,CAFiB,CAApB;;AAIA,SAAKgG,cAAL,CAAoB;AAClBE,mBAAaA;AADK,KAApB;AAGD,GA/JH;;AAAA,sBAiKEjC,iBAjKF,gCAiKuB;AACnB,QAAI,KAAKlE,IAAL,CAAU2D,mBAAd,EAAmC;AACjC,aAAO,KAAK3D,IAAL,CAAU2D,mBAAV,EAAP;AACD,KAFD,MAEO;AACL,WAAKpD,UAAL;AACD;AACF,GAvKH;;AAAA,sBAyKEgE,iBAzKF,gCAyKuB;AACnB,QAAM8B,QAAQ,KAAKH,EAAL,CAAQI,gBAAR,CAAyB1G,kBAAzB,CAAd;AACA,WAAO2G,OAAOC,IAAP,CAAYH,KAAZ,EAAmBI,GAAnB,CAAuB,UAACC,GAAD;AAAA,aAASL,MAAMK,GAAN,CAAT;AAAA,KAAvB,CAAP;AACD,GA5KH;;AAAA,sBA8KElC,mBA9KF,kCA8KyB;AACrB,QAAMmC,iBAAiB,KAAKpC,iBAAL,EAAvB;AACA,QAAIoC,eAAeC,MAAnB,EAA2BD,eAAe,CAAf,EAAkBE,KAAlB;AAC5B,GAjLH;;AAAA,sBAmLEC,gBAnLF,+BAmLsB;AAClB,QAAMC,YAAY,KAAKb,EAAL,CAAQc,aAAR,CAAsB,wBAAtB,CAAlB;AACA,QAAID,SAAJ,EAAeA,UAAUF,KAAV;AAChB,GAtLH;;AAAA,sBAwLEpC,aAxLF,0BAwLiBwC,KAxLjB,EAwLwB;AACpB,QAAIN,iBAAiB,KAAKpC,iBAAL,EAArB;AACA,QAAI2C,mBAAmBP,eAAeQ,OAAf,CAAuBC,SAASC,aAAhC,CAAvB;;AAEA,QAAIJ,MAAMK,QAAN,IAAkBJ,qBAAqB,CAA3C,EAA8C;AAC5CP,qBAAeA,eAAeC,MAAf,GAAwB,CAAvC,EAA0CC,KAA1C;AACAI,YAAMM,cAAN;AACD;;AAED,QAAI,CAACN,MAAMK,QAAP,IAAmBJ,qBAAqBP,eAAeC,MAAf,GAAwB,CAApE,EAAuE;AACrED,qBAAe,CAAf,EAAkBE,KAAlB;AACAI,YAAMM,cAAN;AACD;AACF,GArMH;;AAAA,sBAuMEtD,SAvMF,wBAuMe;AACX,SAAKgC,cAAL,CAAoB;AAClBuB,gBAAU;AADQ,KAApB;;AAIA;AACA,SAAKC,mBAAL,GAA2BC,OAAOC,OAAlC;AACA;AACA,SAAKC,kBAAL,GAA0BR,SAASC,aAAnC;;AAEA,QAAI,KAAKrH,IAAL,CAAUyD,8BAAd,EAA8C;AAC5C2D,eAASS,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,uBAA5B;AACD;;AAED,SAAKC,QAAL,CAAc,KAAKjI,IAAL,CAAUkI,QAAV,EAAd;AACA,SAAKhD,sBAAL;AACA,SAAK6B,gBAAL;AACD,GAxNH;;AAAA,sBA0NEvG,UA1NF,yBA0NgB;AACZ,SAAK0F,cAAL,CAAoB;AAClBuB,gBAAU;AADQ,KAApB;;AAIA,QAAI,KAAKxH,IAAL,CAAUyD,8BAAd,EAA8C;AAC5C2D,eAASS,IAAT,CAAcC,SAAd,CAAwBI,MAAxB,CAA+B,uBAA/B;AACD;;AAED,SAAKN,kBAAL,CAAwBf,KAAxB;AACD,GApOH;;AAAA,sBAsOE1C,WAtOF,0BAsOiB;AACb,WAAO,CAAC,KAAKyB,cAAL,GAAsB4B,QAAvB,IAAmC,KAA1C;AACD,GAxOH;;AAAA,sBA0OE7C,SA1OF,sBA0OasC,KA1Ob,EA0OoB;AAChB;AACA,QAAIA,MAAMkB,OAAN,KAAkB,EAAtB,EAA0B,KAAKjE,iBAAL,CAAuB+C,KAAvB;AAC1B;AACA,QAAIA,MAAMkB,OAAN,KAAkB,CAAtB,EAAyB,KAAK1D,aAAL,CAAmBwC,KAAnB;AAC1B,GA/OH;;AAAA,sBAiPErC,kBAjPF,iCAiPwB;AACpB,QAAI,KAAK5E,IAAL,CAAUqD,wBAAd,EAAwC,KAAKa,iBAAL;AACzC,GAnPH;;AAAA,sBAqPEa,WArPF,wBAqPeqD,EArPf,EAqPmB;AAAA;;AACf,QAAMC,QAAQ5I,QAAQ2I,GAAGE,aAAH,CAAiBC,KAAzB,CAAd;AACAF,UAAMG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,UAAIA,KAAKC,IAAL,KAAc,MAAlB,EAA0B;;AAE1B,UAAMC,OAAOF,KAAKG,SAAL,EAAb;AACA,UAAI,CAACD,IAAL,EAAW;AACT,eAAK5I,IAAL,CAAU2F,GAAV,CAAc,qDAAd;AACA,eAAK3F,IAAL,CAAU8I,IAAV,CAAe,oBAAf,EAAqC,OAArC;AACA;AACD;AACD,aAAK9I,IAAL,CAAU2F,GAAV,CAAc,yBAAd;AACA,aAAK3F,IAAL,CAAU+I,OAAV,CAAkB;AAChBC,gBAAQ,OAAK9I,EADG;AAEhBgB,cAAMwH,KAAKxH,IAFK;AAGhBd,cAAMsI,KAAKtI,IAHK;AAIhB6I,cAAML;AAJU,OAAlB;AAMD,KAhBD;AAiBD,GAxQH;;AAAA,sBA0QE3D,iBA1QF,8BA0QqBoD,EA1QrB,EA0QyB;AAAA;;AACrBA,OAAGb,cAAH;AACA,QAAMc,QAAQ5I,QAAQ2I,GAAG3F,MAAH,CAAU4F,KAAlB,CAAd;;AAEAA,UAAMG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,aAAK1I,IAAL,CAAU+I,OAAV,CAAkB;AAChBC,gBAAQ,OAAK9I,EADG;AAEhBgB,cAAMwH,KAAKxH,IAFK;AAGhBd,cAAMsI,KAAKtI,IAHK;AAIhB6I,cAAMP;AAJU,OAAlB;AAMD,KAPD;AAQD,GAtRH;;AAAA,sBAwRE/D,UAxRF,yBAwRgB;AAAA;;AACZ;AACA,QAAMuE,mBAAmBzJ,mBAAmB,KAAKQ,IAAL,CAAU2C,OAA7B,CAAzB;AACA,QAAI,CAAC,KAAK3C,IAAL,CAAU4C,MAAX,IAAqBqG,gBAAzB,EAA2C;AACzCA,uBAAiBT,OAAjB,CAAyB;AAAA,eAAW7F,QAAQuG,gBAAR,CAAyB,OAAzB,EAAkC,OAAKjF,SAAvC,CAAX;AAAA,OAAzB;AACD;;AAED,QAAI,CAAC,KAAKjE,IAAL,CAAU4C,MAAX,IAAqB,CAACqG,gBAA1B,EAA4C;AAC1C,WAAKlJ,IAAL,CAAU2F,GAAV,CAAc,gJAAd;AACD;;AAED,QAAI,CAAC,KAAK1F,IAAL,CAAU4C,MAAf,EAAuB;AACrBwE,eAAS8B,gBAAT,CAA0B,SAA1B,EAAqC,KAAKvE,SAA1C;AACD;;AAED;AACA,SAAKwE,sBAAL,GAA8BhK,SAAS,KAAK+G,EAAd,EAAkB,UAACmC,KAAD,EAAQe,GAAR,EAAaC,QAAb,EAAuBC,WAAvB,EAAuC;AACrF,aAAKxE,UAAL,CAAgBuD,KAAhB,EAAuBiB,WAAvB;AACD,KAF6B,CAA9B;;AAIA,SAAKrE,sBAAL;AACAyC,WAAOwB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKjE,sBAAvC;AACD,GA9SH;;AAAA,sBAgTEsE,YAhTF,2BAgTkB;AAAA;;AACd,QAAMN,mBAAmBzJ,mBAAmB,KAAKQ,IAAL,CAAU2C,OAA7B,CAAzB;AACA,QAAI,CAAC,KAAK3C,IAAL,CAAU4C,MAAX,IAAqBqG,gBAAzB,EAA2C;AACzCA,uBAAiBT,OAAjB,CAAyB;AAAA,eAAW7F,QAAQ6G,mBAAR,CAA4B,OAA5B,EAAqC,OAAKvF,SAA1C,CAAX;AAAA,OAAzB;AACD;;AAED,QAAI,CAAC,KAAKjE,IAAL,CAAU4C,MAAf,EAAuB;AACrBwE,eAASoC,mBAAT,CAA6B,SAA7B,EAAwC,KAAK7E,SAA7C;AACD;;AAED,SAAKwE,sBAAL;AACAzB,WAAO8B,mBAAP,CAA2B,QAA3B,EAAqC,KAAKvE,sBAA1C;AACD,GA5TH;;AAAA,sBA8TEA,sBA9TF,qCA8T4B;AACxB,QAAMwE,cAAc,KAAKvD,EAAL,CAAQc,aAAR,CAAsB,uBAAtB,CAApB;AACA,SAAKjH,IAAL,CAAU2F,GAAV,uBAAkC+D,YAAYC,WAA9C;;AAEA,SAAKzD,cAAL,CAAoB;AAClB0D,sBAAgBF,YAAYC;AADV,KAApB;AAGD,GArUH;;AAAA,sBAuUE7E,cAvUF,2BAuUkB+E,MAvUlB,EAuU0B;AACtB,SAAK3D,cAAL,CAAoB;AAClB4D,mBAAaD,UAAU;AADL,KAApB;AAGD,GA3UH;;AAAA,sBA6UE9E,UA7UF,uBA6UcuD,KA7Ud,EA6UqBiB,WA7UrB,EA6UkC;AAAA;;AAC9B,SAAKvJ,IAAL,CAAU2F,GAAV,CAAc,gCAAd;AACA,SAAK3F,IAAL,CAAU+J,IAAV,CAAe,qBAAf,EAAsCR,WAAtC;;AAEAjB,UAAMG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,aAAK1I,IAAL,CAAU+I,OAAV,CAAkB;AAChBC,gBAAQ,OAAK9I,EADG;AAEhBgB,cAAMwH,KAAKxH,IAFK;AAGhBd,cAAMsI,KAAKtI,IAHK;AAIhB6I,cAAMP;AAJU,OAAlB;AAMD,KAPD;AAQD,GAzVH;;AAAA,sBA2VEvD,MA3VF,mBA2VUS,KA3VV,EA2ViB;AAAA;;AACb,QAAMoE,cAAc,KAAKnE,cAAL,EAApB;AACA,QAAMyC,QAAQ1C,MAAM0C,KAApB;;AAEA,QAAM2B,WAAWzD,OAAOC,IAAP,CAAY6B,KAAZ,EAAmBjC,MAAnB,CAA0B,UAACqC,IAAD,EAAU;AACnD,aAAO,CAACJ,MAAMI,IAAN,EAAYwB,QAAZ,CAAqBC,aAA7B;AACD,KAFgB,CAAjB;AAGA,QAAMC,kBAAkB5D,OAAOC,IAAP,CAAY6B,KAAZ,EAAmBjC,MAAnB,CAA0B,UAACqC,IAAD,EAAU;AAC1D,aAAO,CAACJ,MAAMI,IAAN,EAAYwB,QAAZ,CAAqBhI,cAAtB,IACAoG,MAAMI,IAAN,EAAYwB,QAAZ,CAAqBC,aADrB,IAEA,CAAC7B,MAAMI,IAAN,EAAY2B,QAFpB;AAGD,KAJuB,CAAxB;;AAMA,QAAIC,uBAAuB,EAA3B;AACAF,oBAAgB3B,OAAhB,CAAwB,UAACC,IAAD,EAAU;AAChC4B,2BAAqBrE,IAArB,CAA0BqC,MAAMI,IAAN,CAA1B;AACD,KAFD;;AAIA,QAAI6B,YAAY,CAAhB;AACA,QAAIC,oBAAoB,CAAxB;AACAF,yBAAqB7B,OAArB,CAA6B,UAACC,IAAD,EAAU;AACrC6B,kBAAYA,aAAa7B,KAAKwB,QAAL,CAAcO,UAAd,IAA4B,CAAzC,CAAZ;AACAD,0BAAoBA,qBAAqB9B,KAAKwB,QAAL,CAAcQ,aAAd,IAA+B,CAApD,CAApB;AACD,KAHD;AAIAH,gBAAY5K,YAAY4K,SAAZ,CAAZ;AACAC,wBAAoB7K,YAAY6K,iBAAZ,CAApB;;AAEA,QAAMG,+BAA+B,SAA/BA,4BAA+B,CAACjI,MAAD,EAAY;AAC/C,UAAM2C,SAAS,OAAKrF,IAAL,CAAU4K,SAAV,CAAoBlI,OAAOxC,EAA3B,CAAf;AACA,aAAO,SAAc,EAAd,EAAkBwC,MAAlB,EAA0B;AAC/BmI,cAAMxF,OAAOwF,IAAP,IAAe,OAAK5K,IAAL,CAAUL,cADA;AAE/BuF,gBAAQE,OAAOF;AAFgB,OAA1B,CAAP;AAID,KAND;;AAQA,QAAM2F,cAAc,SAAdA,WAAc,CAACpI,MAAD,EAAY;AAC9B,UAAM2C,SAAS,OAAKrF,IAAL,CAAU4K,SAAV,CAAoBlI,OAAOxC,EAA3B,CAAf;AACA;AACA,UAAI,OAAOmF,OAAOyF,WAAd,KAA8B,UAAlC,EAA8C;AAC5C,eAAO,IAAP;AACD;AACD,aAAOzF,OAAOyF,WAAP,EAAP;AACD,KAPD;;AASA,QAAMC,YAAYf,YAAYjE,OAAZ,CACfM,MADe,CACR;AAAA,aAAU3D,OAAOtC,IAAP,KAAgB,UAAhB,IAA8B0K,YAAYpI,MAAZ,CAAxC;AAAA,KADQ,EAEfgE,GAFe,CAEXiE,4BAFW,CAAlB;;AAIA,QAAMK,qBAAqBhB,YAAYjE,OAAZ,CACxBM,MADwB,CACjB;AAAA,aAAU3D,OAAOtC,IAAP,KAAgB,mBAA1B;AAAA,KADiB,EAExBsG,GAFwB,CAEpBiE,4BAFoB,CAA3B;;AAIA,QAAMM,cAAc,SAAdA,WAAc,CAAC5C,EAAD,EAAQ;AAC1B,aAAKrI,IAAL,CAAUS,MAAV,GAAmByK,KAAnB,CAAyB,UAACC,GAAD,EAAS;AAChC;AACA,eAAKnL,IAAL,CAAU2F,GAAV,CAAcwF,IAAIC,KAAJ,IAAaD,IAAIE,OAAjB,IAA4BF,GAA1C;AACD,OAHD;AAID,KALD;;AAOA,QAAMG,eAAe,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,aAAKvL,IAAL,CAAU+J,IAAV,CAAe,eAAf,EAAgCwB,MAAhC;AACA,aAAKvL,IAAL,CAAUmB,UAAV,CAAqBoK,MAArB;AACD,KAHD;;AAKA,QAAMC,eAAe,SAAfA,YAAe,CAACC,IAAD,EAAOF,MAAP,EAAkB;AACrC,aAAKvL,IAAL,CAAU0L,WAAV,CAAsBH,MAAtB,EAA8BE,IAA9B;AACA,aAAK3G,cAAL;AACD,KAHD;;AAKA,WAAOzF,YAAY;AACjBuG,aAAOA,KADU;AAEjB+F,aAAO3B,WAFU;AAGjBC,gBAAUA,QAHO;AAIjB3B,aAAOA,KAJU;AAKjBsD,sBAAgBpF,OAAOC,IAAP,CAAY6B,KAAZ,EAAmBzB,MALlB;AAMjBgF,qBAAejG,MAAMiG,aANJ;AAOjBd,iBAAWA,SAPM;AAQjB3E,mBAAa4D,YAAY5D,WARR;AASjBwE,iBAAW,KAAK5K,IAAL,CAAU4K,SATJ;AAUjBI,0BAAoBA,kBAVH;AAWjBc,mBAAa,KAAK9L,IAAL,CAAUC,IAAV,CAAe6L,WAXX;AAYjB3I,wBAAkB,KAAKlD,IAAL,CAAUkD,gBAZX;AAajBjD,UAAI,KAAKA,EAbQ;AAcjBM,kBAAY,KAAK2D,iBAdA;AAejBU,0BAAoB,KAAKA,kBAfR;AAgBjBI,yBAAmB,KAAKA,iBAhBP;AAiBjBD,mBAAa,KAAKA,WAjBD;AAkBjBnC,cAAQ,KAAK5C,IAAL,CAAU4C,MAlBD;AAmBjB0B,iBAAW,KAAKA,SAnBC;AAoBjBD,qBAAe,KAAKA,aApBH;AAqBjBqB,WAAK,KAAK3F,IAAL,CAAU2F,GArBE;AAsBjB5B,YAAM,KAAKA,IAtBM;AAuBjBgF,eAAS,KAAK/I,IAAL,CAAU+I,OAvBF;AAwBjB5H,kBAAY,KAAKnB,IAAL,CAAUmB,UAxBL;AAyBjB2H,YAAM,KAAK9I,IAAL,CAAU8I,IAzBC;AA0BjBzF,YAAM,KAAKpD,IAAL,CAAUoD,IA1BC;AA2BjBV,kBAAYqH,YAAYrH,UA3BP;AA4BjBoJ,wBAAkB,KAAK/L,IAAL,CAAU4F,KAAV,CAAgBoG,YAAhB,CAA6BD,gBAA7B,IAAiD,KA5BlD;AA6BjBd,mBAAaA,WA7BI;AA8BjB7I,mBAAa,KAAKpC,IAAL,CAAUiM,WA9BN;AA+BjB5J,mBAAa,KAAKrC,IAAL,CAAUqC,WA/BN;AAgCjBiJ,oBAAcA,YAhCG;AAiCjBxB,mBAAaE,YAAYF,WAjCR;AAkCjBhF,sBAAgB,KAAKA,cAlCJ;AAmCjB0G,oBAAcA,YAnCG;AAoCjBtG,8BAAwB,KAAKA,sBApCZ;AAqCjBpC,aAAO,KAAK7C,IAAL,CAAU6C,KArCA;AAsCjBC,cAAQ,KAAK9C,IAAL,CAAU8C,MAtCD;AAuCjBE,kCAA4B,KAAKhD,IAAL,CAAUgD,0BAvCrB;AAwCjBU,mCAA6B,KAAK1D,IAAL,CAAU0D,2BAxCtB;AAyCjBuI,oBAAclC,YAAYJ,cAzCT;AA0CjBuC,cAAQnC,YAAYJ,cAAZ,GAA6B,GA1CpB;AA2CjBwC,qBAAe,KAAKA,aA3CH;AA4CjBC,wBAAkB,KAAKrM,IAAL,CAAUC,IAAV,CAAeqM,YAAf,CAA4BD,gBA5C7B;AA6CjBE,wBAAkB,KAAKvM,IAAL,CAAUC,IAAV,CAAeqM,YAAf,CAA4BC;AA7C7B,KAAZ,CAAP;AA+CD,GA/cH;;AAAA,sBAidEC,uBAjdF,sCAid6B;AAAA;;AACzB,SAAKxM,IAAL,CAAUyM,cAAV,CAAyB,UAACpH,MAAD,EAAY;AACnC,UAAIA,UAAU,CAACA,OAAO3C,MAAlB,IAA4B2C,OAAOpF,IAAnC,IAA2CoF,OAAOpF,IAAP,CAAYyC,MAAZ,KAAuB,OAAK6C,WAA3E,EAAwF;AACtF,eAAKlB,SAAL,CAAegB,MAAf;AACD;AACF,KAJD;AAKD,GAvdH;;AAAA,sBAydED,OAzdF,sBAyda;AAAA;;AACT;AACA,SAAKc,cAAL,CAAoB;AAClBuB,gBAAU,IADQ;AAElBiF,oBAAc,KAFI;AAGlBtG,mBAAa,KAHK;AAIlBzD,kBAAY,KAAK1C,IAAL,CAAU0C,UAJJ;AAKlBoD,eAAS;AALS,KAApB;;AAQA,QAAMrD,SAAS,KAAKzC,IAAL,CAAUyC,MAAzB;AACA,QAAIA,MAAJ,EAAY;AACV,WAAKiK,KAAL,CAAWjK,MAAX,EAAmB,IAAnB;AACD;;AAED,QAAMkK,UAAU,KAAK3M,IAAL,CAAU2M,OAAV,IAAqB,EAArC;AACAA,YAAQnE,OAAR,CAAgB,UAACoE,QAAD,EAAc;AAC5B,UAAMxH,SAAS,OAAKrF,IAAL,CAAU4K,SAAV,CAAoBiC,QAApB,CAAf;AACA,UAAIxH,MAAJ,EAAYA,OAAOsH,KAAP,SAAmBtH,MAAnB;AACb,KAHD;;AAKA,QAAI,CAAC,KAAKpF,IAAL,CAAUsD,gBAAf,EAAiC;AAC/B,WAAKvD,IAAL,CAAU8M,GAAV,CAAcxN,SAAd,EAAyB;AACvBY,YAAO,KAAKA,EAAZ,eADuB;AAEvBwC,gBAAQ,IAFe;AAGvBS,0BAAkB,KAAKlD,IAAL,CAAUkD,gBAHL;AAIvBD,6BAAqB,KAAKjD,IAAL,CAAUiD,mBAJR;AAKvB6J,yBAAiB,KAAK9M,IAAL,CAAUmD,uBALJ;AAMvBS,gBAAQ,KAAK5D,IAAL,CAAU4D;AANK,OAAzB;AAQD;;AAED,QAAI,CAAC,KAAK5D,IAAL,CAAUuD,eAAf,EAAgC;AAC9B,WAAKxD,IAAL,CAAU8M,GAAV,CAAcvN,QAAd,EAAwB;AACtBW,YAAO,KAAKA,EAAZ,cADsB;AAEtBwC,gBAAQ;AAFc,OAAxB;AAID;;AAED,QAAI,CAAC,KAAKzC,IAAL,CAAUwD,yBAAf,EAA0C;AACxC,WAAKzD,IAAL,CAAU8M,GAAV,CAActN,kBAAd,EAAkC;AAChCU,YAAO,KAAKA,EAAZ,wBADgC;AAEhC8C,wBAAgB,KAAK/C,IAAL,CAAU+C;AAFM,OAAlC;AAID;;AAED,SAAKwJ,uBAAL;;AAEA,SAAK7H,UAAL;AACD,GA1gBH;;AAAA,sBA4gBEqI,SA5gBF,wBA4gBe;AAAA;;AACX,QAAI,CAAC,KAAK/M,IAAL,CAAUuD,eAAf,EAAgC;AAC9B,UAAMyJ,WAAW,KAAKjN,IAAL,CAAU4K,SAAV,CAAoB,UAApB,CAAjB;AACA;AACA;AACA,UAAIqC,QAAJ,EAAc,KAAKjN,IAAL,CAAUkN,YAAV,CAAuBD,QAAvB;AACf;;AAED,QAAI,CAAC,KAAKhN,IAAL,CAAUsD,gBAAf,EAAiC;AAC/B,UAAM4J,YAAY,KAAKnN,IAAL,CAAU4K,SAAV,CAAoB,WAApB,CAAlB;AACA,UAAIuC,SAAJ,EAAe,KAAKnN,IAAL,CAAUkN,YAAV,CAAuBC,SAAvB;AAChB;;AAED,QAAI,CAAC,KAAKlN,IAAL,CAAUwD,yBAAf,EAA0C;AACxC,UAAM2J,YAAY,KAAKpN,IAAL,CAAU4K,SAAV,CAAoB,oBAApB,CAAlB;AACA,UAAIwC,SAAJ,EAAe,KAAKpN,IAAL,CAAUkN,YAAV,CAAuBE,SAAvB;AAChB;;AAED,QAAMR,UAAU,KAAK3M,IAAL,CAAU2M,OAAV,IAAqB,EAArC;AACAA,YAAQnE,OAAR,CAAgB,UAACoE,QAAD,EAAc;AAC5B,UAAMxH,SAAS,QAAKrF,IAAL,CAAU4K,SAAV,CAAoBiC,QAApB,CAAf;AACA,UAAIxH,MAAJ,EAAYA,OAAOgI,OAAP;AACb,KAHD;;AAKA,SAAKA,OAAL;AACA,SAAK7D,YAAL;AACD,GAtiBH;;AAAA;AAAA,EAAyCvK,MAAzC","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\nconst Translator = require('../../core/Translator')\nconst dragDrop = require('drag-drop')\nconst DashboardUI = require('./Dashboard')\nconst StatusBar = require('../StatusBar')\nconst Informer = require('../Informer')\nconst ThumbnailGenerator = require('../ThumbnailGenerator')\nconst { findAllDOMElements, toArray } = require('../../core/Utils')\nconst prettyBytes = require('prettier-bytes')\nconst { defaultTabIcon } = require('./icons')\n\n// Some code for managing focus was adopted from https://github.com/ghosh/micromodal\n// MIT licence, https://github.com/ghosh/micromodal/blob/master/LICENSE.md\n// Copyright (c) 2017 Indrashish Ghosh\nconst FOCUSABLE_ELEMENTS = [\n  'a[href]',\n  'area[href]',\n  'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n  'select:not([disabled]):not([aria-hidden])',\n  'textarea:not([disabled]):not([aria-hidden])',\n  'button:not([disabled]):not([aria-hidden])',\n  'iframe',\n  'object',\n  'embed',\n  '[contenteditable]',\n  '[tabindex]:not([tabindex^=\"-\"])'\n]\n\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\nmodule.exports = class Dashboard extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'Dashboard'\n    this.title = 'Dashboard'\n    this.type = 'orchestrator'\n\n    const defaultLocale = {\n      strings: {\n        selectToUpload: 'Select files to upload',\n        closeModal: 'Close Modal',\n        upload: 'Upload',\n        importFrom: 'Import from',\n        dashboardWindowTitle: 'Uppy Dashboard Window (Press escape to close)',\n        dashboardTitle: 'Uppy Dashboard',\n        copyLinkToClipboardSuccess: 'Link copied to clipboard',\n        copyLinkToClipboardFallback: 'Copy the URL below',\n        copyLink: 'Copy link',\n        fileSource: 'File source',\n        done: 'Done',\n        name: 'Name',\n        removeFile: 'Remove file',\n        editFile: 'Edit file',\n        editing: 'Editing',\n        finishEditingFile: 'Finish editing file',\n        saveChanges: 'Save changes',\n        cancel: 'Cancel',\n        localDisk: 'Local Disk',\n        myDevice: 'My Device',\n        dropPasteImport: 'Drop files here, paste, import from one of the locations above or',\n        dropPaste: 'Drop files here, paste or',\n        browse: 'browse',\n        fileProgress: 'File progress: upload speed and ETA',\n        numberOfSelectedFiles: 'Number of selected files',\n        uploadAllNewFiles: 'Upload all new files',\n        emptyFolderAdded: 'No files were added from empty folder',\n        uploadComplete: 'Upload complete',\n        resumeUpload: 'Resume upload',\n        pauseUpload: 'Pause upload',\n        retryUpload: 'Retry upload',\n        uploadXFiles: {\n          0: 'Upload %{smart_count} file',\n          1: 'Upload %{smart_count} files'\n        },\n        uploadXNewFiles: {\n          0: 'Upload +%{smart_count} file',\n          1: 'Upload +%{smart_count} files'\n        },\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    }\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      metaFields: [],\n      trigger: '#uppy-select-files',\n      inline: false,\n      width: 750,\n      height: 550,\n      thumbnailWidth: 280,\n      defaultTabIcon: defaultTabIcon,\n      showLinkToFileUploadResult: true,\n      showProgressDetails: false,\n      hideUploadButton: false,\n      hideProgressAfterFinish: false,\n      note: null,\n      closeModalOnClickOutside: false,\n      disableStatusBar: false,\n      disableInformer: false,\n      disableThumbnailGenerator: false,\n      disablePageScrollWhenModalOpen: true,\n      proudlyDisplayPoweredByUppy: true,\n      onRequestCloseModal: () => this.closeModal(),\n      locale: defaultLocale\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    this.openModal = this.openModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n    this.requestCloseModal = this.requestCloseModal.bind(this)\n    this.isModalOpen = this.isModalOpen.bind(this)\n\n    this.addTarget = this.addTarget.bind(this)\n    this.hideAllPanels = this.hideAllPanels.bind(this)\n    this.showPanel = this.showPanel.bind(this)\n    this.getFocusableNodes = this.getFocusableNodes.bind(this)\n    this.setFocusToFirstNode = this.setFocusToFirstNode.bind(this)\n    this.maintainFocus = this.maintainFocus.bind(this)\n\n    this.initEvents = this.initEvents.bind(this)\n    this.onKeydown = this.onKeydown.bind(this)\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n    this.toggleFileCard = this.toggleFileCard.bind(this)\n    this.handleDrop = this.handleDrop.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.updateDashboardElWidth = this.updateDashboardElWidth.bind(this)\n    this.render = this.render.bind(this)\n    this.install = this.install.bind(this)\n  }\n\n  addTarget (plugin) {\n    const callerPluginId = plugin.id || plugin.constructor.name\n    const callerPluginName = plugin.title || callerPluginId\n    const callerPluginType = plugin.type\n\n    if (callerPluginType !== 'acquirer' &&\n        callerPluginType !== 'progressindicator' &&\n        callerPluginType !== 'presenter') {\n      let msg = 'Dashboard: Modal can only be used by plugins of types: acquirer, progressindicator, presenter'\n      this.uppy.log(msg)\n      return\n    }\n\n    const target = {\n      id: callerPluginId,\n      name: callerPluginName,\n      type: callerPluginType\n    }\n\n    const state = this.getPluginState()\n    const newTargets = state.targets.slice()\n    newTargets.push(target)\n\n    this.setPluginState({\n      targets: newTargets\n    })\n\n    return this.el\n  }\n\n  hideAllPanels () {\n    this.setPluginState({\n      activePanel: false\n    })\n  }\n\n  showPanel (id) {\n    const { targets } = this.getPluginState()\n\n    const activePanel = targets.filter((target) => {\n      return target.type === 'acquirer' && target.id === id\n    })[0]\n\n    this.setPluginState({\n      activePanel: activePanel\n    })\n  }\n\n  requestCloseModal () {\n    if (this.opts.onRequestCloseModal) {\n      return this.opts.onRequestCloseModal()\n    } else {\n      this.closeModal()\n    }\n  }\n\n  getFocusableNodes () {\n    const nodes = this.el.querySelectorAll(FOCUSABLE_ELEMENTS)\n    return Object.keys(nodes).map((key) => nodes[key])\n  }\n\n  setFocusToFirstNode () {\n    const focusableNodes = this.getFocusableNodes()\n    if (focusableNodes.length) focusableNodes[0].focus()\n  }\n\n  setFocusToBrowse () {\n    const browseBtn = this.el.querySelector('.uppy-Dashboard-browse')\n    if (browseBtn) browseBtn.focus()\n  }\n\n  maintainFocus (event) {\n    var focusableNodes = this.getFocusableNodes()\n    var focusedItemIndex = focusableNodes.indexOf(document.activeElement)\n\n    if (event.shiftKey && focusedItemIndex === 0) {\n      focusableNodes[focusableNodes.length - 1].focus()\n      event.preventDefault()\n    }\n\n    if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n      focusableNodes[0].focus()\n      event.preventDefault()\n    }\n  }\n\n  openModal () {\n    this.setPluginState({\n      isHidden: false\n    })\n\n    // save scroll position\n    this.savedScrollPosition = window.scrollY\n    // save active element, so we can restore focus when modal is closed\n    this.savedActiveElement = document.activeElement\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.add('uppy-Dashboard-isOpen')\n    }\n\n    this.rerender(this.uppy.getState())\n    this.updateDashboardElWidth()\n    this.setFocusToBrowse()\n  }\n\n  closeModal () {\n    this.setPluginState({\n      isHidden: true\n    })\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.remove('uppy-Dashboard-isOpen')\n    }\n\n    this.savedActiveElement.focus()\n  }\n\n  isModalOpen () {\n    return !this.getPluginState().isHidden || false\n  }\n\n  onKeydown (event) {\n    // close modal on esc key press\n    if (event.keyCode === 27) this.requestCloseModal(event)\n    // maintainFocus on tab key press\n    if (event.keyCode === 9) this.maintainFocus(event)\n  }\n\n  handleClickOutside () {\n    if (this.opts.closeModalOnClickOutside) this.requestCloseModal()\n  }\n\n  handlePaste (ev) {\n    const files = toArray(ev.clipboardData.items)\n    files.forEach((file) => {\n      if (file.kind !== 'file') return\n\n      const blob = file.getAsFile()\n      if (!blob) {\n        this.uppy.log('[Dashboard] File pasted, but the file blob is empty')\n        this.uppy.info('Error pasting file', 'error')\n        return\n      }\n      this.uppy.log('[Dashboard] File pasted')\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: blob\n      })\n    })\n  }\n\n  handleInputChange (ev) {\n    ev.preventDefault()\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  initEvents () {\n    // Modal open button\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.addEventListener('click', this.openModal))\n    }\n\n    if (!this.opts.inline && !showModalTrigger) {\n      this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options unless you are planning to call openModal() method yourself')\n    }\n\n    if (!this.opts.inline) {\n      document.addEventListener('keydown', this.onKeydown)\n    }\n\n    // Drag Drop\n    this.removeDragDropListener = dragDrop(this.el, (files, pos, fileList, directories) => {\n      this.handleDrop(files, directories)\n    })\n\n    this.updateDashboardElWidth()\n    window.addEventListener('resize', this.updateDashboardElWidth)\n  }\n\n  removeEvents () {\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.removeEventListener('click', this.openModal))\n    }\n\n    if (!this.opts.inline) {\n      document.removeEventListener('keydown', this.onKeydown)\n    }\n\n    this.removeDragDropListener()\n    window.removeEventListener('resize', this.updateDashboardElWidth)\n  }\n\n  updateDashboardElWidth () {\n    const dashboardEl = this.el.querySelector('.uppy-Dashboard-inner')\n    this.uppy.log(`Dashboard width: ${dashboardEl.offsetWidth}`)\n\n    this.setPluginState({\n      containerWidth: dashboardEl.offsetWidth\n    })\n  }\n\n  toggleFileCard (fileId) {\n    this.setPluginState({\n      fileCardFor: fileId || false\n    })\n  }\n\n  handleDrop (files, directories) {\n    this.uppy.log('[Dashboard] Files were dropped')\n    this.uppy.emit('directories-dropped', directories)\n\n    files.forEach((file) => {\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  render (state) {\n    const pluginState = this.getPluginState()\n    const files = state.files\n\n    const newFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadStarted\n    })\n    const inProgressFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadComplete &&\n             files[file].progress.uploadStarted &&\n             !files[file].isPaused\n    })\n\n    let inProgressFilesArray = []\n    inProgressFiles.forEach((file) => {\n      inProgressFilesArray.push(files[file])\n    })\n\n    let totalSize = 0\n    let totalUploadedSize = 0\n    inProgressFilesArray.forEach((file) => {\n      totalSize = totalSize + (file.progress.bytesTotal || 0)\n      totalUploadedSize = totalUploadedSize + (file.progress.bytesUploaded || 0)\n    })\n    totalSize = prettyBytes(totalSize)\n    totalUploadedSize = prettyBytes(totalUploadedSize)\n\n    const attachRenderFunctionToTarget = (target) => {\n      const plugin = this.uppy.getPlugin(target.id)\n      return Object.assign({}, target, {\n        icon: plugin.icon || this.opts.defaultTabIcon,\n        render: plugin.render\n      })\n    }\n\n    const isSupported = (target) => {\n      const plugin = this.uppy.getPlugin(target.id)\n      // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n      if (typeof plugin.isSupported !== 'function') {\n        return true\n      }\n      return plugin.isSupported()\n    }\n\n    const acquirers = pluginState.targets\n      .filter(target => target.type === 'acquirer' && isSupported(target))\n      .map(attachRenderFunctionToTarget)\n\n    const progressindicators = pluginState.targets\n      .filter(target => target.type === 'progressindicator')\n      .map(attachRenderFunctionToTarget)\n\n    const startUpload = (ev) => {\n      this.uppy.upload().catch((err) => {\n        // Log error.\n        this.uppy.log(err.stack || err.message || err)\n      })\n    }\n\n    const cancelUpload = (fileID) => {\n      this.uppy.emit('upload-cancel', fileID)\n      this.uppy.removeFile(fileID)\n    }\n\n    const saveFileCard = (meta, fileID) => {\n      this.uppy.setFileMeta(fileID, meta)\n      this.toggleFileCard()\n    }\n\n    return DashboardUI({\n      state: state,\n      modal: pluginState,\n      newFiles: newFiles,\n      files: files,\n      totalFileCount: Object.keys(files).length,\n      totalProgress: state.totalProgress,\n      acquirers: acquirers,\n      activePanel: pluginState.activePanel,\n      getPlugin: this.uppy.getPlugin,\n      progressindicators: progressindicators,\n      autoProceed: this.uppy.opts.autoProceed,\n      hideUploadButton: this.opts.hideUploadButton,\n      id: this.id,\n      closeModal: this.requestCloseModal,\n      handleClickOutside: this.handleClickOutside,\n      handleInputChange: this.handleInputChange,\n      handlePaste: this.handlePaste,\n      inline: this.opts.inline,\n      showPanel: this.showPanel,\n      hideAllPanels: this.hideAllPanels,\n      log: this.uppy.log,\n      i18n: this.i18n,\n      addFile: this.uppy.addFile,\n      removeFile: this.uppy.removeFile,\n      info: this.uppy.info,\n      note: this.opts.note,\n      metaFields: pluginState.metaFields,\n      resumableUploads: this.uppy.state.capabilities.resumableUploads || false,\n      startUpload: startUpload,\n      pauseUpload: this.uppy.pauseResume,\n      retryUpload: this.uppy.retryUpload,\n      cancelUpload: cancelUpload,\n      fileCardFor: pluginState.fileCardFor,\n      toggleFileCard: this.toggleFileCard,\n      saveFileCard: saveFileCard,\n      updateDashboardElWidth: this.updateDashboardElWidth,\n      width: this.opts.width,\n      height: this.opts.height,\n      showLinkToFileUploadResult: this.opts.showLinkToFileUploadResult,\n      proudlyDisplayPoweredByUppy: this.opts.proudlyDisplayPoweredByUppy,\n      currentWidth: pluginState.containerWidth,\n      isWide: pluginState.containerWidth > 400,\n      isTargetDOMEl: this.isTargetDOMEl,\n      allowedFileTypes: this.uppy.opts.restrictions.allowedFileTypes,\n      maxNumberOfFiles: this.uppy.opts.restrictions.maxNumberOfFiles\n    })\n  }\n\n  discoverProviderPlugins () {\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin && !plugin.target && plugin.opts && plugin.opts.target === this.constructor) {\n        this.addTarget(plugin)\n      }\n    })\n  }\n\n  install () {\n    // Set default state for Dashboard\n    this.setPluginState({\n      isHidden: true,\n      showFileCard: false,\n      activePanel: false,\n      metaFields: this.opts.metaFields,\n      targets: []\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.mount(this, plugin)\n    })\n\n    if (!this.opts.disableStatusBar) {\n      this.uppy.use(StatusBar, {\n        id: `${this.id}:StatusBar`,\n        target: this,\n        hideUploadButton: this.opts.hideUploadButton,\n        showProgressDetails: this.opts.showProgressDetails,\n        hideAfterFinish: this.opts.hideProgressAfterFinish,\n        locale: this.opts.locale\n      })\n    }\n\n    if (!this.opts.disableInformer) {\n      this.uppy.use(Informer, {\n        id: `${this.id}:Informer`,\n        target: this\n      })\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      this.uppy.use(ThumbnailGenerator, {\n        id: `${this.id}:ThumbnailGenerator`,\n        thumbnailWidth: this.opts.thumbnailWidth\n      })\n    }\n\n    this.discoverProviderPlugins()\n\n    this.initEvents()\n  }\n\n  uninstall () {\n    if (!this.opts.disableInformer) {\n      const informer = this.uppy.getPlugin('Informer')\n      // Checking if this plugin exists, in case it was removed by uppy-core\n      // before the Dashboard was.\n      if (informer) this.uppy.removePlugin(informer)\n    }\n\n    if (!this.opts.disableStatusBar) {\n      const statusBar = this.uppy.getPlugin('StatusBar')\n      if (statusBar) this.uppy.removePlugin(statusBar)\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      const thumbnail = this.uppy.getPlugin('ThumbnailGenerator')\n      if (thumbnail) this.uppy.removePlugin(thumbnail)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.unmount()\n    })\n\n    this.unmount()\n    this.removeEvents()\n  }\n}\n"]}