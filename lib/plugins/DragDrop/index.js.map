{"version":3,"sources":["../../../src/plugins/DragDrop/index.js"],"names":["Plugin","require","Translator","toArray","dragDrop","h","module","exports","uppy","opts","type","id","title","defaultLocale","strings","dropHereOr","browse","defaultOpts","target","inputName","width","height","note","locale","isDragDropSupported","checkDragDropSupport","translator","i18n","translate","bind","handleDrop","handleInputChange","render","div","document","createElement","window","files","directories","log","emit","forEach","file","addFile","source","name","data","ev","state","hiddenInputStyle","opacity","overflow","position","zIndex","DragDropClass","DragDropStyle","restrictions","maxNumberOfFiles","allowedFileTypes","input","install","mount","removeDragDropListener","el","pos","fileList","uninstall","unmount"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\nconst Translator = require('../../core/Translator')\nconst { toArray } = require('../../core/Utils')\nconst dragDrop = require('drag-drop')\nconst { h } = require('preact')\n\n/**\n * Drag & Drop plugin\n *\n */\nmodule.exports = class DragDrop extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'acquirer'\n    this.id = this.opts.id || 'DragDrop'\n    this.title = 'Drag & Drop'\n\n    const defaultLocale = {\n      strings: {\n        dropHereOr: 'Drop files here or',\n        browse: 'browse'\n      }\n    }\n\n    // Default options\n    const defaultOpts = {\n      target: null,\n      inputName: 'files[]',\n      width: '100%',\n      height: '100%',\n      note: null,\n      locale: defaultLocale\n    }\n\n    // Merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOpts, opts)\n\n    // Check for browser dragDrop support\n    this.isDragDropSupported = this.checkDragDropSupport()\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    // i18n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    // Bind `this` to class methods\n    this.handleDrop = this.handleDrop.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.checkDragDropSupport = this.checkDragDropSupport.bind(this)\n    this.render = this.render.bind(this)\n  }\n\n  /**\n   * Checks if the browser supports Drag & Drop (not supported on mobile devices, for example).\n   * @return {Boolean}\n   */\n  checkDragDropSupport () {\n    const div = document.createElement('div')\n\n    if (!('draggable' in div) || !('ondragstart' in div && 'ondrop' in div)) {\n      return false\n    }\n\n    if (!('FormData' in window)) {\n      return false\n    }\n\n    if (!('FileReader' in window)) {\n      return false\n    }\n\n    return true\n  }\n\n  handleDrop (files, directories) {\n    this.uppy.log('[DragDrop] Files dropped')\n    this.uppy.emit('directories-dropped', directories)\n\n    files.forEach((file) => {\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  handleInputChange (ev) {\n    this.uppy.log('[DragDrop] Files selected through input')\n\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  render (state) {\n    /* http://tympanus.net/codrops/2015/09/15/styling-customizing-file-inputs-smart-way/ */\n    const hiddenInputStyle = {\n      width: '0.1px',\n      height: '0.1px',\n      opacity: 0,\n      overflow: 'hidden',\n      position: 'absolute',\n      zIndex: -1\n    }\n    const DragDropClass = `uppy-Root uppy-DragDrop-container ${this.isDragDropSupported ? 'uppy-DragDrop--is-dragdrop-supported' : ''}`\n    const DragDropStyle = {\n      width: this.opts.width,\n      height: this.opts.height\n    }\n    const restrictions = this.uppy.opts.restrictions\n\n    // empty value=\"\" on file input, so that the input is cleared after a file is selected,\n    // because Uppy will be handling the upload and so we can select same file\n    // after removing — otherwise browser thinks it’s already selected\n    return (\n      <div class={DragDropClass} style={DragDropStyle}>\n        <div class=\"uppy-DragDrop-inner\">\n          <svg aria-hidden=\"true\" class=\"UppyIcon uppy-DragDrop-arrow\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\" fill-rule=\"evenodd\" />\n          </svg>\n          <label class=\"uppy-DragDrop-label\">\n            <input style={hiddenInputStyle}\n              class=\"uppy-DragDrop-input\"\n              type=\"file\"\n              name={this.opts.inputName}\n              multiple={restrictions.maxNumberOfFiles !== 1}\n              accept={restrictions.allowedFileTypes}\n              ref={(input) => {\n                this.input = input\n              }}\n              onchange={this.handleInputChange}\n              value=\"\" />\n            {this.i18n('dropHereOr')} <span class=\"uppy-DragDrop-dragText\">{this.i18n('browse')}</span>\n          </label>\n          <span class=\"uppy-DragDrop-note\">{this.opts.note}</span>\n        </div>\n      </div>\n    )\n  }\n\n  install () {\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n    this.removeDragDropListener = dragDrop(this.el, (files, pos, fileList, directories) => {\n      this.handleDrop(files, directories)\n      this.uppy.log(files)\n    })\n  }\n\n  uninstall () {\n    this.unmount()\n    this.removeDragDropListener()\n  }\n}\n"]}