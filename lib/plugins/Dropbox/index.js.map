{"version":3,"sources":["../../../src/plugins/Dropbox/index.js"],"names":["Plugin","require","Provider","ProviderView","icons","h","module","exports","uppy","opts","type","id","title","icon","host","provider","files","onAuth","bind","render","defaultOptions","install","view","setPluginState","authenticated","folders","directories","activeRow","filterInput","isSearchVisible","target","mount","uninstall","tearDown","unmount","getFolder","getUsername","data","user_email","isFolder","item","getItemData","getItemIcon","getItemSubList","entries","getItemName","name","getMimeType","getItemId","getItemRequestPath","encodeURIComponent","path_lower","getItemModifiedDate","server_modified","getItemThumbnailUrl","Dropbox","state"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\nconst { Provider } = require('../../server')\nconst { ProviderView } = require('../../views')\nconst icons = require('./icons')\nconst { h } = require('preact')\n\nmodule.exports = class Dropbox extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'acquirer'\n    this.id = this.opts.id || 'Dropbox'\n    this.title = 'Dropbox'\n    this.icon = () => (\n      <svg class=\"UppyIcon\" width=\"128\" height=\"118\" viewBox=\"0 0 128 118\">\n        <path d=\"M38.145.777L1.108 24.96l25.608 20.507 37.344-23.06z\" />\n        <path d=\"M1.108 65.975l37.037 24.183L64.06 68.525l-37.343-23.06zM64.06 68.525l25.917 21.633 37.036-24.183-25.61-20.51z\" />\n        <path d=\"M127.014 24.96L89.977.776 64.06 22.407l37.345 23.06zM64.136 73.18l-25.99 21.567-11.122-7.262v8.142l37.112 22.256 37.114-22.256v-8.142l-11.12 7.262z\" />\n      </svg>\n    )\n\n    // writing out the key explicitly for readability the key used to store\n    // the provider instance must be equal to this.id.\n    this[this.id] = new Provider(uppy, {\n      host: this.opts.host,\n      provider: 'dropbox'\n    })\n\n    this.files = []\n\n    this.onAuth = this.onAuth.bind(this)\n    this.render = this.render.bind(this)\n\n    // set default options\n    const defaultOptions = {}\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n  }\n\n  install () {\n    this.view = new ProviderView(this)\n    // Set default state for Dropbox\n    this.setPluginState({\n      authenticated: false,\n      files: [],\n      folders: [],\n      directories: [],\n      activeRow: -1,\n      filterInput: '',\n      isSearchVisible: false\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.view.tearDown()\n    this.unmount()\n  }\n\n  onAuth (authenticated) {\n    this.setPluginState({ authenticated })\n    if (authenticated) {\n      this.view.getFolder()\n    }\n  }\n\n  getUsername (data) {\n    return data.user_email\n  }\n\n  isFolder (item) {\n    return item['.tag'] === 'folder'\n  }\n\n  getItemData (item) {\n    return item\n  }\n\n  getItemIcon (item) {\n    return icons[item['.tag']]()\n  }\n\n  getItemSubList (item) {\n    return item.entries\n  }\n\n  getItemName (item) {\n    return item.name || ''\n  }\n\n  getMimeType (item) {\n    // mime types aren't supported.\n    return null\n  }\n\n  getItemId (item) {\n    return item.id\n  }\n\n  getItemRequestPath (item) {\n    return encodeURIComponent(item.path_lower)\n  }\n\n  getItemModifiedDate (item) {\n    return item.server_modified\n  }\n\n  getItemThumbnailUrl (item) {\n    return `${this.opts.host}/${this.Dropbox.id}/thumbnail/${this.getItemRequestPath(item)}`\n  }\n\n  render (state) {\n    return this.view.render(state)\n  }\n}\n"]}