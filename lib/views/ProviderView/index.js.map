{"version":3,"sources":["../../../src/views/ProviderView/index.js"],"names":["AuthView","require","Browser","LoaderView","Utils","h","module","exports","plugin","opts","Provider","id","defaultOptions","viewType","showTitles","showFilter","showBreadcrumbs","updateFolderState","bind","addFile","filterItems","filterQuery","toggleSearch","getFolder","getNextFolder","logout","checkAuth","handleAuth","handleDemoAuth","sortByTitle","sortByDate","isActiveRow","isChecked","toggleCheckbox","handleError","handleScroll","donePicking","uppy","on","render","tearDown","off","_updateFilesAndFolders","res","files","folders","getItemSubList","forEach","item","isFolder","push","setPluginState","checkAuthInProgress","then","authenticated","onAuth","catch","err","name","_loaderWrapper","list","updatedDirectories","state","getPluginState","index","directories","findIndex","dir","slice","concat","title","getItemName","username","getUsername","folder","getItemRequestPath","lastCheckbox","undefined","file","isCheckbox","tagFile","source","data","getItemData","getItemId","type","getMimeType","isRemote","body","fileId","remote","host","url","fileUrl","fileType","getFileType","isPreviewSupported","preview","getItemThumbnailUrl","log","location","href","ok","newState","e","filterInput","target","value","inputEl","isSearchVisible","items","filter","toLowerCase","indexOf","sorting","sortedFiles","sort","fileA","fileB","localeCompare","sortedFolders","folderA","folderB","a","Date","getItemModifiedDate","b","sortBySize","length","size","activeRow","itemId","providerFileToId","selectedFolders","getState","addFolder","folderId","loading","dashboard","getPlugin","message","i18n","smart_count","info","removeFolder","removeFile","i","splice","stopPropagation","preventDefault","itemsToToggle","shiftKey","prevIndex","currentIndex","generateFileID","urlId","Math","floor","random","redirect","search","authState","btoa","JSON","stringify","link","authUrl","authWindow","window","open","opener","authWindowUrl","DOMException","TypeError","setTimeout","split","close","error","toString","details","scrollPos","scrollHeight","scrollTop","offsetHeight","path","getNextPagePath","_isHandlingScroll","hideAllPanels","promise","catch_","pluginName","pluginIcon","icon","demo","browserProps","getItemIcon","done"],"mappings":"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","file":"index.js","sourcesContent":["const AuthView = require('./AuthView')\nconst Browser = require('./Browser')\nconst LoaderView = require('./Loader')\nconst Utils = require('../../core/Utils')\nconst { h } = require('preact')\n\n/**\n * Class to easily generate generic views for plugins\n *\n *\n * This class expects the plugin instance using it to have the following\n * accessor methods.\n * Each method takes the item whose property is to be accessed\n * as a param\n *\n * isFolder\n *    @return {Boolean} for if the item is a folder or not\n * getItemData\n *    @return {Object} that is format ready for uppy upload/download\n * getItemIcon\n *    @return {Object} html instance of the item's icon\n * getItemSubList\n *    @return {Array} sub-items in the item. e.g a folder may contain sub-items\n * getItemName\n *    @return {String} display friendly name of the item\n * getMimeType\n *    @return {String} mime type of the item\n * getItemId\n *    @return {String} unique id of the item\n * getItemRequestPath\n *    @return {String} unique request path of the item when making calls to uppy server\n * getItemModifiedDate\n *    @return {object} or {String} date of when last the item was modified\n * getItemThumbnailUrl\n *    @return {String}\n */\nmodule.exports = class ProviderView {\n  /**\n   * @param {object} instance of the plugin\n   */\n  constructor (plugin, opts) {\n    this.plugin = plugin\n    this.Provider = plugin[plugin.id]\n\n    // set default options\n    const defaultOptions = {\n      viewType: 'list',\n      showTitles: true,\n      showFilter: true,\n      showBreadcrumbs: true\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    // Logic\n    this.updateFolderState = this.updateFolderState.bind(this)\n    this.addFile = this.addFile.bind(this)\n    this.filterItems = this.filterItems.bind(this)\n    this.filterQuery = this.filterQuery.bind(this)\n    this.toggleSearch = this.toggleSearch.bind(this)\n    this.getFolder = this.getFolder.bind(this)\n    this.getNextFolder = this.getNextFolder.bind(this)\n    this.logout = this.logout.bind(this)\n    this.checkAuth = this.checkAuth.bind(this)\n    this.handleAuth = this.handleAuth.bind(this)\n    this.handleDemoAuth = this.handleDemoAuth.bind(this)\n    this.sortByTitle = this.sortByTitle.bind(this)\n    this.sortByDate = this.sortByDate.bind(this)\n    this.isActiveRow = this.isActiveRow.bind(this)\n    this.isChecked = this.isChecked.bind(this)\n    this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    this.handleError = this.handleError.bind(this)\n    this.handleScroll = this.handleScroll.bind(this)\n    this.donePicking = this.donePicking.bind(this)\n\n    this.plugin.uppy.on('file-removed', this.updateFolderState)\n\n    // Visual\n    this.render = this.render.bind(this)\n  }\n\n  tearDown () {\n    this.plugin.uppy.off('file-removed', this.updateFolderState)\n  }\n\n  _updateFilesAndFolders (res, files, folders) {\n    this.plugin.getItemSubList(res).forEach((item) => {\n      if (this.plugin.isFolder(item)) {\n        folders.push(item)\n      } else {\n        files.push(item)\n      }\n    })\n\n    this.plugin.setPluginState({ folders, files })\n  }\n\n  checkAuth () {\n    this.plugin.setPluginState({ checkAuthInProgress: true })\n    this.Provider.checkAuth()\n      .then((authenticated) => {\n        this.plugin.setPluginState({ checkAuthInProgress: false })\n        this.plugin.onAuth(authenticated)\n      })\n      .catch((err) => {\n        this.plugin.setPluginState({ checkAuthInProgress: false })\n        this.handleError(err)\n      })\n  }\n\n  /**\n   * Based on folder ID, fetch a new folder and update it to state\n   * @param  {String} id Folder id\n   * @return {Promise}   Folders/files in folder\n   */\n  getFolder (id, name) {\n    return this._loaderWrapper(\n      this.Provider.list(id),\n      (res) => {\n        let folders = []\n        let files = []\n        let updatedDirectories\n\n        const state = this.plugin.getPluginState()\n        const index = state.directories.findIndex((dir) => id === dir.id)\n\n        if (index !== -1) {\n          updatedDirectories = state.directories.slice(0, index + 1)\n        } else {\n          updatedDirectories = state.directories.concat([{id, title: name || this.plugin.getItemName(res)}])\n        }\n\n        this.username = this.username ? this.username : this.plugin.getUsername(res)\n        this._updateFilesAndFolders(res, files, folders)\n        this.plugin.setPluginState({ directories: updatedDirectories })\n      },\n      this.handleError)\n  }\n\n  /**\n   * Fetches new folder\n   * @param  {Object} Folder\n   * @param  {String} title Folder title\n   */\n  getNextFolder (folder) {\n    let id = this.plugin.getItemRequestPath(folder)\n    this.getFolder(id, this.plugin.getItemName(folder))\n    this.lastCheckbox = undefined\n  }\n\n  addFile (file, isCheckbox = false) {\n    const tagFile = {\n      source: this.plugin.id,\n      data: this.plugin.getItemData(file),\n      name: this.plugin.getItemName(file) || this.plugin.getItemId(file),\n      type: this.plugin.getMimeType(file),\n      isRemote: true,\n      body: {\n        fileId: this.plugin.getItemId(file)\n      },\n      remote: {\n        host: this.plugin.opts.host,\n        url: `${this.Provider.fileUrl(this.plugin.getItemRequestPath(file))}`,\n        body: {\n          fileId: this.plugin.getItemId(file)\n        }\n      }\n    }\n\n    const fileType = Utils.getFileType(tagFile)\n    // TODO Should we just always use the thumbnail URL if it exists?\n    if (fileType && Utils.isPreviewSupported(fileType)) {\n      tagFile.preview = this.plugin.getItemThumbnailUrl(file)\n    }\n    this.plugin.uppy.log('Adding remote file')\n    this.plugin.uppy.addFile(tagFile)\n    if (!isCheckbox) {\n      this.donePicking()\n    }\n  }\n\n  /**\n   * Removes session token on client side.\n   */\n  logout () {\n    this.Provider.logout(location.href)\n      .then((res) => {\n        if (res.ok) {\n          const newState = {\n            authenticated: false,\n            files: [],\n            folders: [],\n            directories: []\n          }\n          this.plugin.setPluginState(newState)\n        }\n      }).catch(this.handleError)\n  }\n\n  filterQuery (e) {\n    const state = this.plugin.getPluginState()\n    this.plugin.setPluginState(Object.assign({}, state, {\n      filterInput: e ? e.target.value : ''\n    }))\n  }\n\n  toggleSearch (inputEl) {\n    const state = this.plugin.getPluginState()\n\n    this.plugin.setPluginState({\n      isSearchVisible: !state.isSearchVisible,\n      filterInput: ''\n    })\n  }\n\n  filterItems (items) {\n    const state = this.plugin.getPluginState()\n    return items.filter((folder) => {\n      return this.plugin.getItemName(folder).toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1\n    })\n  }\n\n  sortByTitle () {\n    const state = Object.assign({}, this.plugin.getPluginState())\n    const {files, folders, sorting} = state\n\n    let sortedFiles = files.sort((fileA, fileB) => {\n      if (sorting === 'titleDescending') {\n        return this.plugin.getItemName(fileB).localeCompare(this.plugin.getItemName(fileA))\n      }\n      return this.plugin.getItemName(fileA).localeCompare(this.plugin.getItemName(fileB))\n    })\n\n    let sortedFolders = folders.sort((folderA, folderB) => {\n      if (sorting === 'titleDescending') {\n        return this.plugin.getItemName(folderB).localeCompare(this.plugin.getItemName(folderA))\n      }\n      return this.plugin.getItemName(folderA).localeCompare(this.plugin.getItemName(folderB))\n    })\n\n    this.plugin.setPluginState(Object.assign({}, state, {\n      files: sortedFiles,\n      folders: sortedFolders,\n      sorting: (sorting === 'titleDescending') ? 'titleAscending' : 'titleDescending'\n    }))\n  }\n\n  sortByDate () {\n    const state = Object.assign({}, this.plugin.getPluginState())\n    const {files, folders, sorting} = state\n\n    let sortedFiles = files.sort((fileA, fileB) => {\n      let a = new Date(this.plugin.getItemModifiedDate(fileA))\n      let b = new Date(this.plugin.getItemModifiedDate(fileB))\n\n      if (sorting === 'dateDescending') {\n        return a > b ? -1 : a < b ? 1 : 0\n      }\n      return a > b ? 1 : a < b ? -1 : 0\n    })\n\n    let sortedFolders = folders.sort((folderA, folderB) => {\n      let a = new Date(this.plugin.getItemModifiedDate(folderA))\n      let b = new Date(this.plugin.getItemModifiedDate(folderB))\n\n      if (sorting === 'dateDescending') {\n        return a > b ? -1 : a < b ? 1 : 0\n      }\n\n      return a > b ? 1 : a < b ? -1 : 0\n    })\n\n    this.plugin.setPluginState(Object.assign({}, state, {\n      files: sortedFiles,\n      folders: sortedFolders,\n      sorting: (sorting === 'dateDescending') ? 'dateAscending' : 'dateDescending'\n    }))\n  }\n\n  sortBySize () {\n    const state = Object.assign({}, this.plugin.getPluginState())\n    const {files, sorting} = state\n\n    // check that plugin supports file sizes\n    if (!files.length || !this.plugin.getItemData(files[0]).size) {\n      return\n    }\n\n    let sortedFiles = files.sort((fileA, fileB) => {\n      let a = this.plugin.getItemData(fileA).size\n      let b = this.plugin.getItemData(fileB).size\n\n      if (sorting === 'sizeDescending') {\n        return a > b ? -1 : a < b ? 1 : 0\n      }\n      return a > b ? 1 : a < b ? -1 : 0\n    })\n\n    this.plugin.setPluginState(Object.assign({}, state, {\n      files: sortedFiles,\n      sorting: (sorting === 'sizeDescending') ? 'sizeAscending' : 'sizeDescending'\n    }))\n  }\n\n  isActiveRow (file) {\n    return this.plugin.getPluginState().activeRow === this.plugin.getItemId(file)\n  }\n\n  isChecked (item) {\n    const itemId = this.providerFileToId(item)\n    if (this.plugin.isFolder(item)) {\n      const state = this.plugin.getPluginState()\n      const folders = state.selectedFolders || {}\n      if (itemId in folders) {\n        return folders[itemId]\n      }\n      return false\n    }\n    return (itemId in this.plugin.uppy.getState().files)\n  }\n\n  /**\n   * Adds all files found inside of specified folder.\n   *\n   * Uses separated state while folder contents are being fetched and\n   * mantains list of selected folders, which are separated from files.\n   */\n  addFolder (folder) {\n    const folderId = this.providerFileToId(folder)\n    let state = this.plugin.getPluginState()\n    let folders = state.selectedFolders || {}\n    if (folderId in folders && folders[folderId].loading) {\n      return\n    }\n    folders[folderId] = {loading: true, files: []}\n    this.plugin.setPluginState({selectedFolders: folders})\n    this.Provider.list(this.plugin.getItemRequestPath(folder)).then((res) => {\n      let files = []\n      this.plugin.getItemSubList(res).forEach((item) => {\n        if (!this.plugin.isFolder(item)) {\n          this.addFile(item, true)\n          files.push(this.providerFileToId(item))\n        }\n      })\n      state = this.plugin.getPluginState()\n      state.selectedFolders[folderId] = {loading: false, files: files}\n      this.plugin.setPluginState({selectedFolders: folders})\n      const dashboard = this.plugin.uppy.getPlugin('Dashboard')\n      let message\n      if (files.length) {\n        message = dashboard.i18n('folderAdded', {\n          smart_count: files.length, folder: this.plugin.getItemName(folder)\n        })\n      } else {\n        message = dashboard.i18n('emptyFolderAdded')\n      }\n      this.plugin.uppy.info(message)\n    }).catch((e) => {\n      state = this.plugin.getPluginState()\n      delete state.selectedFolders[folderId]\n      this.plugin.setPluginState({selectedFolders: state.selectedFolders})\n      this.handleError(e)\n    })\n  }\n\n  removeFolder (folderId) {\n    let state = this.plugin.getPluginState()\n    let folders = state.selectedFolders || {}\n    if (!(folderId in folders)) {\n      return\n    }\n    let folder = folders[folderId]\n    if (folder.loading) {\n      return\n    }\n    // deepcopy the files before iteration because the\n    // original array constantly gets mutated during\n    // the iteration by updateFolderState as each file\n    // is removed and 'core:file-removed' is emitted.\n    const files = folder.files.concat([])\n    for (const fileId of files) {\n      if (fileId in this.plugin.uppy.getState().files) {\n        this.plugin.uppy.removeFile(fileId)\n      }\n    }\n    delete folders[folderId]\n    this.plugin.setPluginState({selectedFolders: folders})\n  }\n\n  /**\n   * Updates selected folders state everytime file is being removed.\n   *\n   * Note that this is only important when files are getting removed from the\n   * main screen, and will do nothing when you uncheck folder directly, since\n   * it's already been done in removeFolder method.\n   */\n  updateFolderState (file) {\n    let state = this.plugin.getPluginState()\n    let folders = state.selectedFolders || {}\n    for (let folderId in folders) {\n      let folder = folders[folderId]\n      if (folder.loading) {\n        continue\n      }\n      let i = folder.files.indexOf(file.id)\n      if (i > -1) {\n        folder.files.splice(i, 1)\n      }\n      if (!folder.files.length) {\n        delete folders[folderId]\n      }\n    }\n    this.plugin.setPluginState({selectedFolders: folders})\n  }\n\n  /**\n   * Toggles file/folder checkbox to on/off state while updating files list.\n   *\n   * Note that some extra complexity comes from supporting shift+click to\n   * toggle multiple checkboxes at once, which is done by getting all files\n   * in between last checked file and current one, and applying an on/off state\n   * for all of them, depending on current file state.\n   */\n  toggleCheckbox (e, file) {\n    e.stopPropagation()\n    e.preventDefault()\n    let { folders, files, filterInput } = this.plugin.getPluginState()\n    let items = folders.concat(files)\n    if (filterInput !== '') {\n      items = this.filterItems(items)\n    }\n    let itemsToToggle = [file]\n    if (this.lastCheckbox && e.shiftKey) {\n      let prevIndex = items.indexOf(this.lastCheckbox)\n      let currentIndex = items.indexOf(file)\n      if (prevIndex < currentIndex) {\n        itemsToToggle = items.slice(prevIndex, currentIndex + 1)\n      } else {\n        itemsToToggle = items.slice(currentIndex, prevIndex + 1)\n      }\n    }\n    this.lastCheckbox = file\n    if (this.isChecked(file)) {\n      for (let item of itemsToToggle) {\n        const itemId = this.providerFileToId(item)\n        if (this.plugin.isFolder(item)) {\n          this.removeFolder(itemId)\n        } else {\n          if (itemId in this.plugin.uppy.getState().files) {\n            this.plugin.uppy.removeFile(itemId)\n          }\n        }\n      }\n    } else {\n      for (let item of itemsToToggle) {\n        if (this.plugin.isFolder(item)) {\n          this.addFolder(item)\n        } else {\n          this.addFile(item, true)\n        }\n      }\n    }\n  }\n\n  providerFileToId (file) {\n    return Utils.generateFileID({\n      data: this.plugin.getItemData(file),\n      name: this.plugin.getItemName(file) || this.plugin.getItemId(file),\n      type: this.plugin.getMimeType(file)\n    })\n  }\n\n  handleDemoAuth () {\n    const state = this.plugin.getPluginState()\n    this.plugin.setPluginState({}, state, {\n      authenticated: true\n    })\n  }\n\n  handleAuth () {\n    const urlId = Math.floor(Math.random() * 999999) + 1\n    const redirect = `${location.href}${location.search ? '&' : '?'}id=${urlId}`\n\n    const authState = btoa(JSON.stringify({ redirect }))\n    const link = `${this.Provider.authUrl()}?state=${authState}`\n\n    const authWindow = window.open(link, '_blank')\n    authWindow.opener = null\n    const checkAuth = () => {\n      let authWindowUrl\n\n      try {\n        authWindowUrl = authWindow.location.href\n      } catch (e) {\n        if (e instanceof DOMException || e instanceof TypeError) {\n          return setTimeout(checkAuth, 100)\n        } else throw e\n      }\n\n      // split url because chrome adds '#' to redirects\n      if (authWindowUrl && (authWindowUrl === redirect || authWindowUrl.split('#')[0] === redirect)) {\n        authWindow.close()\n        this._loaderWrapper(this.Provider.checkAuth(), this.plugin.onAuth, this.handleError)\n      } else {\n        setTimeout(checkAuth, 100)\n      }\n    }\n\n    checkAuth()\n  }\n\n  handleError (error) {\n    const uppy = this.plugin.uppy\n    const message = uppy.i18n('uppyServerError')\n    uppy.log(error.toString())\n    uppy.info({message: message, details: error.toString()}, 'error', 5000)\n  }\n\n  handleScroll (e) {\n    const scrollPos = e.target.scrollHeight - (e.target.scrollTop + e.target.offsetHeight)\n    const path = this.plugin.getNextPagePath ? this.plugin.getNextPagePath() : null\n\n    if (scrollPos < 50 && path && !this._isHandlingScroll) {\n      this.Provider.list(path)\n        .then((res) => {\n          const { files, folders } = this.plugin.getPluginState()\n          this._updateFilesAndFolders(res, files, folders)\n        }).catch(this.handleError)\n        .then(() => { this._isHandlingScroll = false }) // always called\n\n      this._isHandlingScroll = true\n    }\n  }\n\n  donePicking () {\n    const dashboard = this.plugin.uppy.getPlugin('Dashboard')\n    if (dashboard) dashboard.hideAllPanels()\n  }\n\n  // displays loader view while asynchronous request is being made.\n  _loaderWrapper (promise, then, catch_) {\n    promise\n      .then(then).catch(catch_)\n      .then(() => this.plugin.setPluginState({ loading: false })) // always called.\n    this.plugin.setPluginState({ loading: true })\n  }\n\n  render (state) {\n    const { authenticated, checkAuthInProgress, loading } = this.plugin.getPluginState()\n\n    if (loading) {\n      return LoaderView()\n    }\n\n    if (!authenticated) {\n      return h(AuthView, {\n        pluginName: this.plugin.title,\n        pluginIcon: this.plugin.icon,\n        demo: this.plugin.opts.demo,\n        checkAuth: this.checkAuth,\n        handleAuth: this.handleAuth,\n        handleDemoAuth: this.handleDemoAuth,\n        checkAuthInProgress: checkAuthInProgress\n      })\n    }\n\n    const browserProps = Object.assign({}, this.plugin.getPluginState(), {\n      username: this.username,\n      getNextFolder: this.getNextFolder,\n      getFolder: this.getFolder,\n      addFile: this.addFile,\n      filterItems: this.filterItems,\n      filterQuery: this.filterQuery,\n      toggleSearch: this.toggleSearch,\n      sortByTitle: this.sortByTitle,\n      sortByDate: this.sortByDate,\n      logout: this.logout,\n      demo: this.plugin.opts.demo,\n      isActiveRow: this.isActiveRow,\n      isChecked: this.isChecked,\n      toggleCheckbox: this.toggleCheckbox,\n      getItemId: this.plugin.getItemId,\n      getItemName: this.plugin.getItemName,\n      getItemIcon: this.plugin.getItemIcon,\n      handleScroll: this.handleScroll,\n      done: this.donePicking,\n      title: this.plugin.title,\n      viewType: this.opts.viewType,\n      showTitles: this.opts.showTitles,\n      showFilter: this.opts.showFilter,\n      showBreadcrumbs: this.opts.showBreadcrumbs,\n      pluginIcon: this.plugin.icon,\n      i18n: this.plugin.uppy.i18n\n    })\n\n    return Browser(browserProps)\n  }\n}\n"]}