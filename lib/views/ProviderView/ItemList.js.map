{"version":3,"sources":["../../../src/views/ProviderView/ItemList.js"],"names":["Row","require","h","module","exports","props","handleScroll","title","folders","map","isDisabled","isChecked","folder","loading","getItemName","id","getItemId","type","getItemIcon","handleClick","handleFolderClick","handleCheckboxClick","e","toggleCheckbox","columns","showTitles","files","file","handleFileClick"],"mappings":"AAAA,IAAMA,MAAMC,QAAQ,QAAR,CAAZ;;eACcA,QAAQ,QAAR,C;IAANC,C,YAAAA,C;;AAERC,OAAOC,OAAP,GAAiB,UAACC,KAAD,EAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SACE;AAAA;AAAA,MAAK,SAAM,2BAAX;AACE;AAAA;AAAA,QAAI,SAAM,2BAAV;AACE,kBAAUA,MAAMC,YADlB;AAEE,cAAK,SAFP;AAGE,8CAAkCD,MAAME,KAH1C;AAIGF,YAAMG,OAAN,CAAcC,GAAd,CAAkB,kBAAU;AAC3B,YAAIC,aAAa,KAAjB;AACA,YAAIC,YAAYN,MAAMM,SAAN,CAAgBC,MAAhB,CAAhB;AACA,YAAID,SAAJ,EAAe;AACbD,uBAAaC,UAAUE,OAAvB;AACD;AACD,eAAOb,IAAI;AACTO,iBAAOF,MAAMS,WAAN,CAAkBF,MAAlB,CADE;AAETG,cAAIV,MAAMW,SAAN,CAAgBJ,MAAhB,CAFK;AAGTK,gBAAM,QAHG;AAIT;AACAC,uBAAa;AAAA,mBAAMb,MAAMa,WAAN,CAAkBN,MAAlB,CAAN;AAAA,WALJ;AAMTO,uBAAa;AAAA,mBAAMd,MAAMe,iBAAN,CAAwBR,MAAxB,CAAN;AAAA,WANJ;AAOTF,sBAAYA,UAPH;AAQTC,qBAAWA,SARF;AASTU,+BAAqB,6BAACC,CAAD;AAAA,mBAAOjB,MAAMkB,cAAN,CAAqBD,CAArB,EAAwBV,MAAxB,CAAP;AAAA,WATZ;AAUTY,mBAASnB,MAAMmB,OAVN;AAWTC,sBAAYpB,MAAMoB;AAXT,SAAJ,CAAP;AAaD,OAnBA,CAJH;AAwBGpB,YAAMqB,KAAN,CAAYjB,GAAZ,CAAgB,gBAAQ;AACvB,eAAOT,IAAI;AACTO,iBAAOF,MAAMS,WAAN,CAAkBa,IAAlB,CADE;AAETZ,cAAIV,MAAMW,SAAN,CAAgBW,IAAhB,CAFK;AAGTV,gBAAM,MAHG;AAIT;AACAC,uBAAa;AAAA,mBAAMb,MAAMa,WAAN,CAAkBS,IAAlB,CAAN;AAAA,WALJ;AAMTR,uBAAa;AAAA,mBAAMd,MAAMuB,eAAN,CAAsBD,IAAtB,CAAN;AAAA,WANJ;AAOTjB,sBAAY,KAPH;AAQTC,qBAAWN,MAAMM,SAAN,CAAgBgB,IAAhB,CARF;AASTN,+BAAqB,6BAACC,CAAD;AAAA,mBAAOjB,MAAMkB,cAAN,CAAqBD,CAArB,EAAwBK,IAAxB,CAAP;AAAA,WATZ;AAUTH,mBAASnB,MAAMmB,OAVN;AAWTC,sBAAYpB,MAAMoB;AAXT,SAAJ,CAAP;AAaD,OAdA;AAxBH;AADF,GADF;AA4CD,CAzDD","file":"ItemList.js","sourcesContent":["const Row = require('./Item')\nconst { h } = require('preact')\n\nmodule.exports = (props) => {\n  // const headers = props.columns.map((column) => {\n  //   return html`\n  //     <th class=\"uppy-ProviderBrowserTable-headerColumn uppy-ProviderBrowserTable-column\" onclick=${props.sortByTitle}>\n  //       ${column.name}\n  //     </th>\n  //   `\n  // })\n\n  // <thead class=\"uppy-ProviderBrowserTable-header\">\n  //   <tr>${headers}</tr>\n  // </thead>\n\n  return (\n    <div class=\"uppy-ProviderBrowser-body\">\n      <ul class=\"uppy-ProviderBrowser-list\"\n        onscroll={props.handleScroll}\n        role=\"listbox\"\n        aria-label={`List of files from ${props.title}`}>\n        {props.folders.map(folder => {\n          let isDisabled = false\n          let isChecked = props.isChecked(folder)\n          if (isChecked) {\n            isDisabled = isChecked.loading\n          }\n          return Row({\n            title: props.getItemName(folder),\n            id: props.getItemId(folder),\n            type: 'folder',\n            // active: props.activeRow(folder),\n            getItemIcon: () => props.getItemIcon(folder),\n            handleClick: () => props.handleFolderClick(folder),\n            isDisabled: isDisabled,\n            isChecked: isChecked,\n            handleCheckboxClick: (e) => props.toggleCheckbox(e, folder),\n            columns: props.columns,\n            showTitles: props.showTitles\n          })\n        })}\n        {props.files.map(file => {\n          return Row({\n            title: props.getItemName(file),\n            id: props.getItemId(file),\n            type: 'file',\n            // active: props.activeRow(file),\n            getItemIcon: () => props.getItemIcon(file),\n            handleClick: () => props.handleFileClick(file),\n            isDisabled: false,\n            isChecked: props.isChecked(file),\n            handleCheckboxClick: (e) => props.toggleCheckbox(e, file),\n            columns: props.columns,\n            showTitles: props.showTitles\n          })\n        })}\n      </ul>\n    </div>\n  )\n}\n"]}